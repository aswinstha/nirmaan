{"version":3,"sources":["styles/fonts.js","marks/CodeMark.js","nodes/CodeNode.js","nodes/NonExecutableCodeNode.js","nodes/SampleOutput.js","nodes/PreNode.js","marks/HotKeys.js","plugins/codePlugin.js","styles/palette.js","components/Buttons.js","components/FormElements.js","toolbars/Popup.js","toolbars/FormatToolBar.js","toolbars/BlocksToolbar.js","components/Image.js","serializers/HtmlSerializer.js","toolbars/ExportToolbar.js","Viewer.js","consts.js","nodes/NoteNode.js","toolbars/DataToolbar.js","marks/SubSupMark.js","Nirmaan.js","plugins/listPlugin.js","plugins/notePlugin.js","plugins/alignPlugin.js","plugins/linkPlugin.js","plugins/pasteHtmlPlugin.js","App.js","serviceWorker.js","index.js"],"names":["fontFamilies","CodeMark","props","children","attributes","react_default","a","createElement","InlineCode","styled","code","_templateObject","SampMark","Samp","samp","_templateObject2","VarMark","Var","_templateObject3","CodeNode","output","node","data","get","CodeOutput","Pre","Code","CodeNode_templateObject","pre","CodeNode_templateObject2","CodeNode_templateObject3","NonExecutableCodeNode","NonExecutableCodeNode_Pre","NonExecutableCodeNode_Code","NonExecutableCodeNode_templateObject","NonExecutableCodeNode_templateObject2","SampleOutput","SampleOutput_Pre","SampleOutput_Samp","SampleOutput_templateObject","SampleOutput_templateObject2","PreNode","PreNode_Pre","PreNode_templateObject","options","type","key","MarkHotKey","palette","Button","button","Buttons_templateObject","BlockButton","Buttons_templateObject2","InlineButton","Buttons_templateObject3","PrimaryButton","_templateObject4","Input","input","FormElements_templateObject","Label","textarea","FormElements_templateObject2","label","FormElements_templateObject3","InlineForm","div","FormElements_templateObject4","PopupWrapper","Popup_templateObject","FormatToolbar","editor","FormatToolbarWrapper","className","index_es","icon","faBold","onClick","toggleMark","focus","faItalic","faUnderline","faCode","faAlignLeft","alignLeft","faAlignCenter","alignCenter","faAlignRight","alignRight","hasLinks","faUnlink","unwrapLink","reactjs_popup_es","modal","trigger","faLink","close","FormatToolBar_InsertLinkPopup","Object","assign","closePopup","InsertLinkPopup","_useState","useState","_useState2","slicedToArray","linkUrl","setLinkUrl","_useState3","_useState4","linkText","setLinkText","isCollapsed","value","selection","Fragment","onChange","e","target","preventDefault","href","insertText","moveFocusBackward","length","wrapLink","FormatToolBar_templateObject","BlocksToolbar","BlocksToolbarWrapper","isList","isBlockEmpty","insertBlock","unwrapList","setBlocks","faParagraph","faCircle","size","inverse","faChevronCircleRight","moveToEndOfBlock","faHeading","faImage","BlocksToolbar_InsertImagePopup","insertUnorderedList","faListUl","faListOl","insertOrderedList","faStickyNote","insertNote","faDatabase","BlocksToolbar_InsertMetadataPopup","faTable","insertTable","isSelectionInTable","removeTable","insertRow","removeRow","insertColumn","removeColumn","toggleTableHeaders","BlocksToolbar_templateObject","InsertImagePopup","imageUrl","setImageUrl","image","src","InsertMetadataPopup","block","startBlock","defaultMeta","entries","toJS","map","_ref","_ref2","meta","setMeta","metaInputs","m","i","MetaDataFormInputWrapper","newKey","oldMeta","concat","toConsumableArray","slice","newValue","CloseButton","faPlus","reduce","obj","setNodeByKey","BlocksToolbar_templateObject2","BlocksToolbar_templateObject3","Image_templateObject","selected","getHtmlAttributesFromSlate","attrs","o","attr","getHtmlAttributesFromHtmlElement","el","hasAttribute","getAttribute","renderChildrenWithLineBreaks","Symbol","iterator","isIterable","split","array","text","push","rules","serialize","object","htmlAttrs","deserialize","next","tag","tagName","toLowerCase","nodes","childNodes","childOfPre","classList","contains","parentNode","htmlSerializer","Html","ExportToolbar","setViewMode","viewMode","ExportToolbarWrapper","string","document","body","appendChild","select","execCommand","removeChild","copyToClipboard","viewerContent","alert","ExportToolbar_templateObject","html","extra_liners","dangerouslySetInnerHTML","__html","JSON","stringify","toJSON","ViewerWrapper","Viewer_templateObject","Viewer","content","viewerRender","ExportToolbar_ExportToolbar","ALIGN","NoteNode","rest","objectWithoutProperties","Note","NoteNode_templateObject","DataToolbar","editorJson","setEditorJson","importHtml","setImportHtml","DataToolbarWrapper","Header","Value","fromJSON","parse","PasteArea","rows","replace","DataToolbar_templateObject","DataToolbar_templateObject2","DataToolbar_templateObject3","SubMark","Sub","sub","SubSupMark_templateObject","SupMark","Sup","sup","SubSupMark_templateObject2","existingValue","localStorage","getItem","schema","normalize","child","paragraph","Block","create","insertNodeByKey","blocks","isVoid","hr","plugins","SoftBreak","shift","DeepTable","commands","wrapBlock","unwrapBlock","queries","some","isParagraph","endText","renderNode","onKeyDown","event","keyCode","align","style","textAlign","NoteNode_NoteNode","getData","prev","objectSpread","isCode","isCodeBlock","onPaste","getEventTransfer","CodeNode_CodeNode","NonExecutableCodeNode_NonExecutableCodeNode","SampleOutput_SampleOutput","PreNode_PreNode","wrapInline","moveToEnd","unwrapInline","inlines","inline","transfer","console","log","insertFragment","Nirmaan","initialValue","leaves","state","_this","defaultValue","json","window","setItem","setState","renderMark","mark","CodeMark_CodeMark","CodeMark_SampMark","CodeMark_VarMark","SubSupMark_SubMark","SubSupMark_SupMark","ctrlKey","isFocused","Div","id","renderEditor","wordCount","getBlocks","memo","b","trim","WordCounter","_this2","this","ToolbarLayout","FormatToolBar_FormatToolbar","DataToolbar_DataToolbar","Layout","BlocksToolbar_BlocksToolbar","EditorWrapper","slate_react_es","ref","src_Viewer","Component","Nirmaan_templateObject","Nirmaan_templateObject2","Nirmaan_templateObject3","Nirmaan_templateObject4","_templateObject5","App","src_Nirmaan","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b7e7f359.chunk.js","sourcesContent":["export const fontFamilies = {\n  MONOSPACE: \"Menlo, Consolas, Courier New\"\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const CodeMark = props => {\n  const { children, attributes } = props;\n  return <InlineCode {...{ attributes }}>{children}</InlineCode>;\n};\n\nconst InlineCode = styled.code`\n  background: #eee;\n\n  &:after {\n    content: \"<code>\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 5px;\n    margin-left: 2px;\n  }\n`;\n\nexport const SampMark = props => {\n  const { children, attributes } = props;\n  return <Samp {...{ attributes }}>{children}</Samp>;\n};\n\nconst Samp = styled.samp`\n  background: #eee;\n\n  &:after {\n    content: \"<samp>\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 5px;\n    margin-left: 2px;\n  }\n`;\n\nexport const VarMark = props => {\n  const { children, attributes } = props;\n  return <Var {...{ attributes }}>{children}</Var>;\n};\n\nconst Var = styled.samp`\n  background: #eee;\n\n  &:after {\n    content: \"<var>\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 5px;\n    margin-left: 2px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const CodeNode = props => {\n  const output = props.node.data.get(\"output\") ? (\n    <CodeOutput>\n      <strong>Output:</strong>\n      <br />\n      {props.node.data.get(\"output\")}\n    </CodeOutput>\n  ) : null;\n\n  return (\n    <div {...props.attributes}>\n      <Pre>\n        <Code>{props.children}</Code>\n      </Pre>\n      {output}\n    </div>\n  );\n};\n\nconst Code = styled.code``;\n\nconst CodeOutput = styled.pre`\n  background: #eee;\n  font-family: ${fontFamilies.MONOSPACE};\n  padding: 10px;\n  z-index: -1;\n`;\n\nconst Pre = styled.pre`\n  background: #eee;\n  position: relative;\n  z-index: -1;\n\n  &:after {\n    content: \"Executable Code\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const NonExecutableCodeNode = props => {\n  return (\n    <Pre {...props.attributes}>\n      <Code>{props.children}</Code>\n    </Pre>\n  );\n};\n\nconst Code = styled.code``;\n\nconst Pre = styled.pre`\n  background: #eee;\n  position: relative;\n  z-index: -1;\n\n  &:after {\n    content: \"Non Executable Code\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const SampleOutput = props => {\n  return (\n    <Pre {...props.attributes}>\n      <Samp>{props.children}</Samp>\n    </Pre>\n  );\n};\n\nconst Samp = styled.samp``;\n\nconst Pre = styled.pre`\n  background: #eee;\n  position: relative;\n  z-index: -1;\n\n  &:after {\n    content: \"Sample Output\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const PreNode = props => {\n  return <Pre {...props.attributes}>{props.children}</Pre>;\n};\n\nconst Pre = styled.pre`\n  background: #eee;\n  position: relative;\n  z-index: -1;\n\n  &:after {\n    content: \"preformatted\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n  }\n`;\n","export const MarkHotKey = options => {\n  const { type, key } = options;\n\n  return {\n    onKeyDown: (event, editor, next) => {\n      if (!event.ctrlKey || event.key !== key) return next();\n      event.preventDefault();\n      editor.toggleMark(type);\n    }\n  };\n};\n","import React from \"react\";\nimport { MarkHotKey } from \"../marks/HotKeys\";\nimport { CodeNode } from \"../nodes/CodeNode\";\nimport { NonExecutableCodeNode } from \"../nodes/NonExecutableCodeNode\";\nimport { SampleOutput } from \"../nodes/SampleOutput\";\nimport { getEventTransfer } from \"slate-react\";\nimport { PreNode } from \"../nodes/PreNode\";\n\nexport const codeMarkPlugin = MarkHotKey({\n  type: \"code\",\n  key: \"`\"\n});\n\nexport const isCodeBlock = block => {\n  return (\n    block.type === \"code\" ||\n    block.type === \"nonexecutable-code\" ||\n    block.type === \"sample-output\"\n  );\n};\n\nexport const codeNodePlugin = options => {\n  return {\n    queries: {\n      isCode: editor => {\n        return editor.value.blocks.some(block => isCodeBlock(block));\n      }\n    },\n    onPaste: (event, editor, next) => {\n      const { text } = getEventTransfer(event);\n      const isCode = editor.isCode();\n\n      if (!isCode) {\n        return next();\n      }\n\n      editor.insertText(text.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\"));\n    },\n    renderNode: (props, editor, next) => {\n      switch (props.node.type) {\n        case \"code\":\n          return <CodeNode {...props} />;\n        case \"nonexecutable-code\":\n          return <NonExecutableCodeNode {...props} />;\n        case \"sample-output\":\n          return <SampleOutput {...props} />;\n        case \"pre\":\n          return <PreNode {...props} />;\n        default:\n          return next();\n      }\n    }\n  };\n};\n","export const palette = {\n  GREY_BORDER_LIGHT: \"#eee\",\n  TEAL: \"#008080\",\n  WHITE: \"#F0F0F0\"\n};\n","import styled from \"styled-components\";\nimport { palette } from \"../styles/palette\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const Button = styled.button`\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const BlockButton = styled(Button)`\n  border: 1px solid #ccc;\n  padding: 7px;\n  margin: 3px;\n  cursor: pointer;\n  outline: none;\n  font-size: 13px;\n  color: #777;\n`;\n\nexport const InlineButton = styled(Button)`\n  font-size: 13px;\n`;\n\nexport const PrimaryButton = styled.button`\n  background: ${palette.TEAL};\n  color: ${palette.WHITE};\n  height: 30px;\n  margin: 0 10px;\n  font-size: 16px;\n  font-family: ${fontFamilies.MONOSPACE};\n`;\n","import { palette } from \"../styles/palette\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const Input = styled.input`\n  border: 1px solid ${palette.GREY_BORDER_LIGHT};\n  height: 29px;\n  padding: 0 10px;\n  font-family: ${fontFamilies.MONOSPACE};\n  outline: none;\n  width: 500px;\n  max-width: 90%;\n  font-size: 18px;\n`;\n\nexport const Textarea = styled.textarea`\n  border: 1px solid ${palette.GREY_BORDER_LIGHT};\n  height: 300px;\n  padding: 0 10px;\n  font-family: ${fontFamilies.MONOSPACE};\n  outline: none;\n  width: 500px;\n  font-size: 18px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: bold;\n  margin-top: 20px;\n`;\n\nexport const InlineForm = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n`;\n","import styled from \"styled-components\";\n\nexport const PopupWrapper = styled.div`\n  padding: 30px 50px;\n  z-index: 100000000;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBold,\n  faItalic,\n  faCode,\n  faAlignCenter,\n  faAlignLeft,\n  faAlignRight,\n  faLink,\n  faUnlink,\n  faUnderline\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { InlineButton, PrimaryButton } from \"../components/Buttons\";\nimport { Input, Label } from \"../components/FormElements\";\nimport Popup from \"reactjs-popup\";\nimport { PopupWrapper } from \"./Popup\";\n\nexport const FormatToolbar = props => {\n  const { editor } = props;\n  return (\n    <FormatToolbarWrapper>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faBold}\n          onClick={() => {\n            editor.toggleMark(\"bold\");\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faItalic}\n          onClick={() => {\n            editor.toggleMark(\"italic\");\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faUnderline}\n          onClick={() => {\n            editor.toggleMark(\"underline\");\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faCode}\n          onClick={() => {\n            editor.toggleMark(\"code\");\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <div\n          onClick={() => {\n            editor.toggleMark(\"samp\");\n            editor.focus();\n          }}\n        >\n          samp\n        </div>\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <div\n          onClick={() => {\n            editor.toggleMark(\"var\");\n            editor.focus();\n          }}\n        >\n          var\n        </div>\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faAlignLeft}\n          onClick={() => {\n            editor.alignLeft();\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faAlignCenter}\n          onClick={() => {\n            editor.alignCenter();\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faAlignRight}\n          onClick={() => {\n            editor.alignRight();\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <div\n          onClick={() => {\n            editor.toggleMark(\"sup\");\n            editor.focus();\n          }}\n        >\n          sup\n        </div>\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <div\n          onClick={() => {\n            editor.toggleMark(\"sub\");\n            editor.focus();\n          }}\n        >\n          sub\n        </div>\n      </InlineButton>\n      {editor &&\n        (editor.hasLinks() ? (\n          <InlineButton className=\"tooltip-icon-button\">\n            <FontAwesomeIcon\n              icon={faUnlink}\n              onClick={() => {\n                editor.unwrapLink();\n              }}\n            />\n          </InlineButton>\n        ) : (\n          <Popup\n            modal\n            trigger={\n              <InlineButton className=\"tooltip-icon-button\">\n                <FontAwesomeIcon icon={faLink} />\n              </InlineButton>\n            }\n          >\n            {close => <InsertLinkPopup {...props} closePopup={close} />}\n          </Popup>\n        ))}\n    </FormatToolbarWrapper>\n  );\n};\n\nconst InsertLinkPopup = props => {\n  const { editor, closePopup } = props;\n  const [linkUrl, setLinkUrl] = useState(\"\");\n  const [linkText, setLinkText] = useState(\"\");\n\n  const isCollapsed = editor.value.selection.isCollapsed;\n\n  return (\n    <PopupWrapper>\n      {isCollapsed && (\n        <>\n          <Label>Text</Label>\n          <Input\n            type=\"text\"\n            value={linkText}\n            onChange={e => setLinkText(e.target.value)}\n          />\n        </>\n      )}\n      <Label>Link</Label>\n      <Input\n        type=\"text\"\n        value={linkUrl}\n        onChange={e => setLinkUrl(e.target.value)}\n      />\n      <PrimaryButton\n        onClick={e => {\n          e.preventDefault();\n          const href = linkUrl;\n\n          if (isCollapsed) {\n            editor\n              .insertText(linkText)\n              .moveFocusBackward(linkText.length)\n              .wrapLink(href)\n              .focus();\n          } else {\n            editor.wrapLink(href);\n          }\n          closePopup();\n        }}\n      >\n        Insert\n      </PrimaryButton>\n    </PopupWrapper>\n  );\n};\n\nconst FormatToolbarWrapper = styled.div`\n  display: flex;\n  border-bottom: solid 1.7px rgba(199, 198, 255, 0.15);\n  padding: 10px 0;\n  background: white;\n`;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHeading,\n  faCode,\n  faImage,\n  faParagraph,\n  faTable,\n  faListUl,\n  faListOl,\n  faCircle,\n  faChevronCircleRight,\n  faStickyNote,\n  faDatabase,\n  faPlus,\n  faCross\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { BlockButton, PrimaryButton, Button } from \"../components/Buttons\";\nimport styled from \"styled-components\";\nimport Popup from \"reactjs-popup\";\nimport { Input, InlineForm, Textarea, Label } from \"../components/FormElements\";\nimport { PopupWrapper } from \"./Popup\";\n\nexport const BlocksToolbar = props => {\n  const { editor, onChange } = props;\n\n  return (\n    <BlocksToolbarWrapper>\n      <BlockButton\n        onClick={() => {\n          if (editor.isList() && !editor.isBlockEmpty()) {\n            editor.insertBlock(\"paragraph\").unwrapList();\n          } else {\n            editor.setBlocks(\"paragraph\").unwrapList();\n          }\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faParagraph} />\n      </BlockButton>\n      <BlockButton\n        onClick={e => {\n          e.preventDefault();\n          editor.insertText(\"\\n\");\n          editor.focus();\n        }}\n      >\n        &lt;br&gt;\n      </BlockButton>\n      <BlockButton\n        onClick={e => {\n          e.preventDefault();\n          editor.insertBlock(\"hr\");\n        }}\n      >\n        __\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"code\");\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faCode} />\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"nonexecutable-code\");\n          editor.focus();\n        }}\n      >\n        <span className=\"fa-layers fa-fw\">\n          <FontAwesomeIcon icon={faCircle} size=\"lg\" />\n          <FontAwesomeIcon icon={faCode} size=\"xs\" inverse />\n        </span>\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"sample-output\");\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faChevronCircleRight} />\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"heading-1\");\n          !editor.isBlockEmpty() &&\n            editor\n              .moveToEndOfBlock()\n              .insertBlock(\"paragraph\")\n              .unwrapList();\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faHeading} />\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"heading-2\");\n          !editor.isBlockEmpty() &&\n            editor\n              .moveToEndOfBlock()\n              .insertBlock(\"paragraph\")\n              .unwrapList();\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faHeading} size=\"sm\" />\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"heading-3\");\n          !editor.isBlockEmpty() &&\n            editor\n              .moveToEndOfBlock()\n              .insertBlock(\"paragraph\")\n              .unwrapList();\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faHeading} size=\"xs\" />\n      </BlockButton>\n      <Popup\n        modal\n        trigger={\n          <BlockButton className=\"tooltip-icon-button\">\n            <FontAwesomeIcon icon={faImage} />\n          </BlockButton>\n        }\n      >\n        {close => <InsertImagePopup {...props} closePopup={close} />}\n      </Popup>\n\n      <BlockButton\n        onClick={e => {\n          e.preventDefault();\n          if (!editor.isList()) {\n            onChange(editor.insertUnorderedList());\n          } else {\n            onChange(editor.unwrapList());\n          }\n        }}\n      >\n        <FontAwesomeIcon icon={faListUl} />\n      </BlockButton>\n      <BlockButton>\n        <FontAwesomeIcon\n          icon={faListOl}\n          onClick={e => {\n            e.preventDefault();\n            if (!editor.isList()) {\n              onChange(editor.insertOrderedList());\n            } else {\n              onChange(editor.unwrapList());\n            }\n          }}\n        />\n      </BlockButton>\n      <BlockButton>\n        <div\n          onClick={e => {\n            e.preventDefault();\n            editor.setBlocks(\"pre\");\n          }}\n        >\n          pre\n        </div>\n      </BlockButton>\n      <BlockButton>\n        <FontAwesomeIcon\n          icon={faStickyNote}\n          onClick={e => {\n            e.preventDefault();\n            onChange(editor.insertNote());\n          }}\n        />\n      </BlockButton>\n      <Popup\n        trigger={\n          <BlockButton>\n            <FontAwesomeIcon\n              icon={faDatabase}\n              onClick={e => {\n                e.preventDefault();\n              }}\n            />\n          </BlockButton>\n        }\n        modal\n      >\n        {close => <InsertMetadataPopup {...props} closePopup={close} />}\n      </Popup>\n\n      <BlockButton>\n        <FontAwesomeIcon\n          icon={faTable}\n          onClick={e => {\n            e.preventDefault();\n            onChange(editor.insertTable().unwrapList());\n          }}\n        />\n      </BlockButton>\n      {editor && editor.isSelectionInTable() && (\n        <>\n          <button onClick={() => onChange(editor.removeTable())}>\n            Delete Table\n          </button>\n          <button onClick={() => onChange(editor.insertRow())}>\n            Insert Row\n          </button>\n          <button onClick={() => onChange(editor.removeRow())}>\n            Delete Row\n          </button>\n          <button onClick={() => onChange(editor.insertColumn())}>\n            Insert Column\n          </button>\n          <button onClick={() => onChange(editor.removeColumn())}>\n            Delete Column\n          </button>\n          <button onClick={() => onChange(editor.toggleTableHeaders())}>\n            Toggle header\n          </button>\n        </>\n      )}\n    </BlocksToolbarWrapper>\n  );\n};\n\nconst BlocksToolbarWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  left: 0;\n  top: 4%;\n`;\n\nconst InsertImagePopup = props => {\n  const { editor, closePopup } = props;\n  const [imageUrl, setImageUrl] = useState(\"https://placekitten.com/200/300\");\n\n  return (\n    <PopupWrapper>\n      <InlineForm>\n        <Input\n          type=\"text\"\n          value={imageUrl}\n          onChange={e => setImageUrl(e.target.value)}\n        />\n        <PrimaryButton\n          onClick={e => {\n            e.preventDefault();\n            const image = {\n              type: \"image\",\n              data: {\n                src: imageUrl\n              }\n            };\n            editor.isBlockEmpty()\n              ? editor.setBlocks(image)\n              : editor.insertBlock(image);\n            editor.insertBlock(\"paragraph\");\n            editor.focus();\n            closePopup();\n          }}\n        >\n          Insert\n        </PrimaryButton>\n      </InlineForm>\n    </PopupWrapper>\n  );\n};\n\nconst InsertMetadataPopup = props => {\n  const { editor, closePopup } = props;\n\n  const block = editor.value.startBlock;\n\n  let defaultMeta = Object.entries(block.data.toJS()).map(([key, value]) => {\n    return {\n      key,\n      value\n    };\n  });\n\n  if (defaultMeta.length === 0) defaultMeta = [{ key: \"\", value: \"\" }];\n\n  const [meta, setMeta] = useState(defaultMeta);\n\n  const metaInputs = meta.map((m, i) => {\n    return (\n      <MetaDataFormInputWrapper key={i}>\n        <div>\n          <Label>Key</Label>\n          <Input\n            type=\"text\"\n            value={m.key}\n            onChange={e => {\n              const newKey = e.target.value;\n              setMeta(oldMeta => {\n                return [\n                  ...oldMeta.slice(0, i),\n                  {\n                    key: newKey,\n                    value: oldMeta[i].value\n                  },\n                  ...oldMeta.slice(i + 1)\n                ];\n              });\n            }}\n          />\n        </div>\n        <div>\n          <Label>Value</Label>\n          <Input\n            value={m.value}\n            onChange={e => {\n              const newValue = e.target.value;\n              setMeta(oldMeta => {\n                return [\n                  ...oldMeta.slice(0, i),\n                  {\n                    key: oldMeta[i].key,\n                    value: newValue\n                  },\n                  ...oldMeta.slice(i + 1)\n                ];\n              });\n            }}\n          />\n        </div>\n        <div>\n          <CloseButton\n            onClick={() => {\n              setMeta(oldMeta => {\n                return [...oldMeta.slice(0, i), ...oldMeta.slice(i + 1)];\n              });\n            }}\n          >\n            ×\n          </CloseButton>\n        </div>\n      </MetaDataFormInputWrapper>\n    );\n  });\n\n  return (\n    <PopupWrapper>\n      <h2>Update metadata</h2>\n      {metaInputs}\n      <Button\n        onClick={() => setMeta(meta => [...meta, { key: \"\", value: \"\" }])}\n      >\n        <FontAwesomeIcon icon={faPlus} />\n      </Button>\n      <PrimaryButton\n        onClick={e => {\n          e.preventDefault();\n          const data = meta.reduce((obj, m) => {\n            obj[m.key] = m.value;\n            return obj;\n          }, {});\n\n          editor.setNodeByKey(block.key, { data });\n\n          editor.focus();\n          closePopup();\n        }}\n      >\n        Update metadata\n      </PrimaryButton>\n    </PopupWrapper>\n  );\n};\n\nconst CloseButton = styled.div`\n  line-height: 100px;\n  font-size: 25px;\n  padding-left: 10px;\n  padding-right: 10px;\n  font-weight: thin;\n  cursor: pointer;\n`;\n\nconst MetaDataFormInputWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 45% 45% 10%;\n  width: 100%;\n`;\n","import styled from \"styled-components\";\n\nexport const Image = styled(\"img\")`\n  display: block;\n  max-width: 100%;\n  box-shadow: ${props => (props.selected ? \"0 0 0 2px blue;\" : \"none\")};\n`;\n","import React from \"react\";\nimport Html from \"slate-html-serializer\";\n\nconst attributes = [\n  \"id\",\n  \"class\",\n  \"name\",\n  \"src\",\n  \"alt\",\n  \"href\",\n  \"title\",\n  \"width\",\n  \"height\"\n];\n\nconst getHtmlAttributesFromSlate = obj => {\n  if (!obj.data) return {};\n  const attrs = obj.data.toJS();\n\n  const htmlAttrs = attributes.reduce((o, attr) => {\n    if (attrs[attr]) {\n      o[attr] = attrs[attr];\n    }\n    return o;\n  }, {});\n  return htmlAttrs;\n};\n\nconst getHtmlAttributesFromHtmlElement = el => {\n  const data = attributes.reduce((o, attr) => {\n    if (el.hasAttribute && el.hasAttribute(attr)) {\n      o[attr] = el.getAttribute(attr);\n    }\n    return o;\n  }, {});\n  return data;\n};\n\nconst isIterable = obj => {\n  if (obj == null) {\n    return false;\n  }\n  return typeof obj[Symbol.iterator] === \"function\";\n};\n\nconst renderChildrenWithLineBreaks = obj => {\n  if (isIterable(obj) && typeof obj !== \"string\") {\n    return obj.map(o => renderChildrenWithLineBreaks(o));\n  }\n  if (typeof obj === \"string\") {\n    return obj.split(\"\\n\").reduce((array, text, i) => {\n      if (i !== 0) array.push(<br key={i} />);\n      array.push(text);\n      return array;\n    }, []);\n  }\n  return obj;\n};\n\nconst rules = [\n  {\n    serialize: (obj, children) => {\n      if (obj.object === \"block\") {\n        const htmlAttrs = getHtmlAttributesFromSlate(obj);\n\n        switch (obj.type) {\n          case \"code\":\n            return (\n              <pre {...htmlAttrs} className=\"exec\">\n                <code>{children}</code>\n              </pre>\n            );\n          case \"nonexecutable-code\":\n            return (\n              <pre {...htmlAttrs}>\n                <code>{children}</code>\n              </pre>\n            );\n          case \"sample-output\":\n            return (\n              <pre {...htmlAttrs}>\n                <samp>{children}</samp>\n              </pre>\n            );\n          case \"image\":\n            return <img {...htmlAttrs} />;\n          case \"paragraph\":\n            return (\n              <p {...htmlAttrs}>{renderChildrenWithLineBreaks(children)}</p>\n            );\n          case \"heading-1\":\n            return <h1 {...htmlAttrs}>{children}</h1>;\n          case \"heading-2\":\n            return <h2 {...htmlAttrs}>{children}</h2>;\n          case \"heading-3\":\n            return <h3 {...htmlAttrs}>{children}</h3>;\n          case \"ul-list\":\n            return <ul {...htmlAttrs}>{children}</ul>;\n          case \"ol-list\":\n            return <ol {...htmlAttrs}>{children}</ol>;\n          case \"list-item\":\n            return (\n              <li {...htmlAttrs}>{renderChildrenWithLineBreaks(children)}</li>\n            );\n          case \"table\":\n            return <table {...htmlAttrs}>{children}</table>;\n          case \"table_row\":\n            return <tr {...htmlAttrs}>{children}</tr>;\n          case \"table_cell\":\n            return <td {...htmlAttrs}>{children}</td>;\n          case \"pre\":\n            return <pre {...htmlAttrs}>{children}</pre>;\n          case \"hr\":\n            return <hr {...htmlAttrs} />;\n          case \"div\":\n            return <div {...htmlAttrs}>{children}</div>;\n          default:\n            return <p {...htmlAttrs}>{children}</p>;\n        }\n      }\n    },\n    deserialize: (el, next) => {\n      const tag = el.tagName.toLowerCase();\n      const data = getHtmlAttributesFromHtmlElement(el);\n\n      if (tag === \"div\") {\n        return {\n          object: \"block\",\n          type: \"div\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"p\") {\n        return {\n          object: \"block\",\n          type: \"paragraph\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"h1\") {\n        return {\n          object: \"block\",\n          type: \"heading-1\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"h2\") {\n        return {\n          object: \"block\",\n          type: \"heading-2\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"h3\") {\n        return {\n          object: \"block\",\n          type: \"heading-3\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"ul\") {\n        return {\n          object: \"block\",\n          type: \"ul-list\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"ol\") {\n        return {\n          object: \"block\",\n          type: \"ol-list\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"li\") {\n        return {\n          object: \"block\",\n          type: \"list-item\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"table\") {\n        return {\n          object: \"block\",\n          type: \"table\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"tr\") {\n        return {\n          object: \"block\",\n          type: \"table_row\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"td\") {\n        return {\n          object: \"block\",\n          type: \"table_cell\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"hr\") {\n        return {\n          object: \"block\",\n          type: \"hr\",\n          data\n        };\n      }\n      if (tag === \"pre\") {\n        const childOfPre = el.childNodes[0];\n        if (\n          childOfPre &&\n          childOfPre.tagName &&\n          childOfPre.tagName.toLowerCase() === \"code\" &&\n          childOfPre.classList.contains(\"exec\")\n        ) {\n          return {\n            object: \"block\",\n            type: \"code\",\n            nodes: next(childOfPre.childNodes),\n            data\n          };\n        }\n\n        if (\n          childOfPre &&\n          childOfPre.tagName &&\n          childOfPre.tagName.toLowerCase() === \"code\" &&\n          !childOfPre.classList.contains(\"exec\")\n        ) {\n          return {\n            object: \"block\",\n            type: \"nonexecutable-code\",\n            nodes: next(childOfPre.childNodes),\n            data\n          };\n        }\n\n        if (\n          childOfPre &&\n          childOfPre.tagName &&\n          childOfPre.tagName.toLowerCase() === \"samp\"\n        ) {\n          return {\n            object: \"block\",\n            type: \"sample-output\",\n            nodes: next(childOfPre.childNodes),\n            data\n          };\n        }\n        return {\n          object: \"block\",\n          type: \"pre\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n\n      if (tag === \"img\") {\n        return {\n          object: \"block\",\n          type: \"image\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n    }\n  },\n  {\n    serialize: (obj, children) => {\n      if (obj.object === \"mark\") {\n        switch (obj.type) {\n          case \"bold\":\n            return <strong>{children}</strong>;\n          case \"underline\":\n            return <u>{children}</u>;\n          case \"italic\":\n            return <em>{children}</em>;\n          case \"code\":\n            return <code>{children}</code>;\n          case \"var\":\n            return <var>{children}</var>;\n          case \"samp\":\n            return <samp>{children}</samp>;\n          case \"sup\":\n            return <sup>{children}</sup>;\n          case \"sub\":\n            return <sub>{children}</sub>;\n          default:\n            return;\n        }\n      }\n    },\n    deserialize: (el, next) => {\n      const tag = el.tagName.toLowerCase();\n      if (tag === \"strong\") {\n        return {\n          object: \"mark\",\n          type: \"bold\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"u\") {\n        return {\n          object: \"mark\",\n          type: \"underline\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"em\") {\n        return {\n          object: \"mark\",\n          type: \"italic\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"var\") {\n        return {\n          object: \"mark\",\n          type: \"var\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"sub\") {\n        return {\n          object: \"mark\",\n          type: \"sub\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"sup\") {\n        return {\n          object: \"mark\",\n          type: \"sup\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"code\" && el.parentNode.tagName.toLowerCase() !== \"pre\") {\n        return {\n          object: \"mark\",\n          type: \"code\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"samp\" && el.parentNode.tagName.toLowerCase() !== \"pre\") {\n        return {\n          object: \"mark\",\n          type: \"samp\",\n          nodes: next(el.childNodes)\n        };\n      }\n    }\n  },\n  {\n    serialize: (obj, children) => {\n      const htmlAttrs = getHtmlAttributesFromSlate(obj);\n      if (obj.object === \"inline\") {\n        switch (obj.type) {\n          case \"link\":\n            return <a {...htmlAttrs}>{children}</a>;\n          default:\n            return;\n        }\n      }\n    },\n    // Special case for links, to grab their href.\n    deserialize: (el, next) => {\n      const data = getHtmlAttributesFromHtmlElement(el);\n      if (el.tagName.toLowerCase() === \"a\") {\n        return {\n          object: \"inline\",\n          type: \"link\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n    }\n  },\n  {\n    serialize(obj, children) {\n      if (obj.object === \"string\") {\n        return children;\n      }\n    }\n  }\n];\n\n// Create a new serializer instance with our `rules` from above.\nconst htmlSerializer = new Html({ rules });\n\nexport default htmlSerializer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { InlineButton } from \"../components/Buttons\";\nimport { viewerContent } from \"../Viewer\";\n\nconst copyToClipboard = string => {\n  const el = document.createElement(\"textarea\");\n  el.value = string;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n};\n\nexport const ExportToolbar = props => {\n  const { editor, setViewMode, viewMode } = props;\n  return (\n    <ExportToolbarWrapper>\n      <InlineButton onClick={() => setViewMode(\"OUTPUT\")}>Output</InlineButton>\n      <InlineButton onClick={() => setViewMode(\"HTML\")}>HTML</InlineButton>\n      <InlineButton\n        onClick={() => {\n          setViewMode(\"JSON\");\n        }}\n      >\n        JSON\n      </InlineButton>\n      <InlineButton\n        onClick={() => {\n          const content = viewerContent(editor, viewMode);\n          copyToClipboard(content);\n          alert(`Copied ${viewMode} to clipboard!`);\n        }}\n      >\n        Copy to Clipboard\n      </InlineButton>\n    </ExportToolbarWrapper>\n  );\n};\n\nconst ExportToolbarWrapper = styled.div`\n  top: 0;\n  right: 0;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport htmlSerializer from \"./serializers/HtmlSerializer\";\nimport pretty from \"pretty\";\nimport { ExportToolbar } from \"./toolbars/ExportToolbar\";\nimport { html } from \"js-beautify\";\n\nexport const viewerContent = (editor, viewMode) => {\n  if (!editor) {\n    return \"\";\n  }\n\n  if (viewMode === \"HTML\") {\n    const prettyHTML = html(htmlSerializer.serialize(editor.value), {\n      extra_liners: [\n        \"p\",\n        \"img\",\n        \"h1\",\n        \"h2\",\n        \"h3\",\n        \"pre\",\n        \"ul\",\n        \"li\",\n        \"table\",\n        \"hr\",\n        \"div\"\n      ]\n    });\n    return prettyHTML;\n  } else if (viewMode === \"OUTPUT\") {\n    return (\n      <div\n        dangerouslySetInnerHTML={{\n          __html: htmlSerializer.serialize(editor.value)\n        }}\n      />\n    );\n  } else {\n    return JSON.stringify(editor.value.toJSON(), null, 4);\n  }\n};\n\nexport const viewerRender = (editor, viewMode) => {\n  if (viewMode === \"OUTPUT\") {\n    return viewerContent(editor, viewMode);\n  } else {\n    return <pre>{viewerContent(editor, viewMode)}</pre>;\n  }\n};\n\nconst Viewer = props => {\n  const { editor } = props;\n\n  const [viewMode, setViewMode] = useState(\"OUTPUT\");\n  let content = viewerRender(editor, viewMode);\n\n  return (\n    <ViewerWrapper>\n      <ExportToolbar\n        editor={editor}\n        viewMode={viewMode}\n        setViewMode={setViewMode}\n      />\n      {content}\n    </ViewerWrapper>\n  );\n};\n\nconst ViewerWrapper = styled.div`\n  padding: 10px;\n\n  max-height: 100vh;\n  overflow: scroll;\n`;\n\nexport default Viewer;\n","export const ALIGN = {\n  LEFT: \"left\",\n  CENTER: \"center\",\n  RIGHT: \"right\"\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const NoteNode = props => {\n  const { attributes, children, ...rest } = props;\n  return (\n    <Note {...attributes} {...rest}>\n      {children}\n    </Note>\n  );\n};\n\nconst Note = styled.div`\n  padding: 20px;\n  border: 1px solid #777;\n`;\n","import React, { useState } from \"react\";\nimport { Value } from \"slate\";\nimport styled from \"styled-components\";\nimport Popup from \"reactjs-popup\";\nimport { fontFamilies } from \"../styles/fonts\";\nimport { PrimaryButton } from \"../components/Buttons\";\nimport htmlSerializer from \"../serializers/HtmlSerializer\";\n\nexport const DataToolbar = props => {\n  const { onChange } = props;\n  const [editorJson, setEditorJson] = useState({});\n  const [importHtml, setImportHtml] = useState(\"<p></p>\");\n  return (\n    <DataToolbarWrapper>\n      <Popup modal trigger={<button>Import JSON</button>}>\n        {close => {\n          return (\n            <>\n              <Header>\n                <h3>Paste JSON here</h3>\n                <PrimaryButton\n                  onClick={() => {\n                    onChange({\n                      value: Value.fromJSON(JSON.parse(editorJson))\n                    });\n                    close();\n                  }}\n                >\n                  Import\n                </PrimaryButton>\n              </Header>\n\n              <PasteArea\n                rows={20}\n                onChange={e => setEditorJson(e.target.value)}\n              />\n            </>\n          );\n        }}\n      </Popup>\n      <Popup modal trigger={<button>Import HTML</button>}>\n        {close => {\n          return (\n            <>\n              <Header>\n                <h3>Paste HTML here</h3>\n\n                <PrimaryButton\n                  onClick={() => {\n                    onChange({\n                      value: htmlSerializer.deserialize(importHtml)\n                    });\n                    close();\n                  }}\n                >\n                  Import\n                </PrimaryButton>\n              </Header>\n\n              <PasteArea\n                rows={20}\n                onChange={e => {\n                  const html = e.target.value.replace(/>\\s+</g, \"><\");\n\n                  setImportHtml(html);\n                }}\n              />\n            </>\n          );\n        }}\n      </Popup>\n    </DataToolbarWrapper>\n  );\n};\n\nconst DataToolbarWrapper = styled.div`\n  justify-self: end;\n`;\n\nconst PasteArea = styled.textarea`\n  font-family: ${fontFamilies.MONOSPACE};\n  outline: none;\n  width: calc(100% - 50px);\n  margin: 0 auto;\n  display: block;\n`;\n\nconst Header = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  align-items: center;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const SubMark = props => {\n  const { children, attributes } = props;\n  return <Sub {...{ attributes }}>{children}</Sub>;\n};\n\nconst Sub = styled.sub``;\n\nexport const SupMark = props => {\n  const { children, attributes } = props;\n  return <Sup {...{ attributes }}>{children}</Sup>;\n};\n\nconst Sup = styled.sup``;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Editor } from \"slate-react\";\nimport { Value, Block } from \"slate\";\n\nimport { CodeMark, SampMark, VarMark } from \"./marks/CodeMark\";\nimport { codeNodePlugin } from \"./plugins/codePlugin\";\nimport { FormatToolbar } from \"./toolbars/FormatToolBar\";\nimport { BlocksToolbar } from \"./toolbars/BlocksToolbar\";\nimport { ImageNode } from \"./nodes/ImageNode\";\nimport SoftBreak from \"slate-soft-break\";\nimport DeepTable from \"slate-deep-table\";\nimport { listPlugin } from \"./plugins/listPlugin\";\nimport Viewer from \"./Viewer\";\nimport styled from \"styled-components\";\nimport { alignPlugin } from \"./plugins/alignPlugin\";\nimport { notePlugin } from \"./plugins/notePlugin\";\nimport { DataToolbar } from \"./toolbars/DataToolbar\";\nimport { linkPlugin } from \"./plugins/linkPlugin\";\nimport { pasteHtmlPlugin } from \"./plugins/pasteHtmlPlugin\";\nimport { SubMark, SupMark } from \"./marks/SubSupMark\";\nimport { fontFamilies } from \"./styles/fonts\";\n\nconst existingValue = JSON.parse(localStorage.getItem(\"content\"));\n\nconst schema = {\n  // This section is need for the image upload functionality, if this is not there, then we cannot add anything after an image.\n  document: {\n    normalize: (editor, { code, node, child }) => {\n      switch (code) {\n        case \"last_child_type_invalid\": {\n          const paragraph = Block.create(\"paragraph\");\n          return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n        }\n        default:\n          return;\n      }\n    }\n  },\n  blocks: {\n    image: {\n      isVoid: true\n    },\n    hr: {\n      isVoid: true\n    }\n  }\n};\n\nconst plugins = [\n  SoftBreak({ shift: true }),\n  DeepTable(),\n  listPlugin(),\n  notePlugin(),\n  alignPlugin(),\n  codeNodePlugin(),\n  linkPlugin(),\n  pasteHtmlPlugin()\n];\n\nclass Nirmaan extends Component {\n  // Set the initial value when the app is first constructed.\n\n  initialValue = Value.fromJSON(\n    existingValue || {\n      document: {\n        nodes: [\n          {\n            object: \"block\",\n            type: \"paragraph\",\n            nodes: [\n              {\n                object: \"text\",\n                leaves: [\n                  {\n                    text: \"A line of text in a paragraph.\"\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  );\n\n  state = {\n    value: this.initialValue || this.props.defaultValue\n  };\n\n  // On change, update the app's React state with the new editor value.\n  onChange = ({ value }) => {\n    const json = value.toJSON();\n    window.content = json;\n\n    const content = JSON.stringify(json);\n    localStorage.setItem(\"content\", content);\n\n    this.setState({ value });\n    this.props.onChange && this.props.onChange(json);\n  };\n\n  renderMark = (props, editor, next) => {\n    const { attributes, children } = props;\n    switch (props.mark.type) {\n      case \"bold\":\n        return <strong {...attributes}>{children}</strong>;\n      case \"underline\":\n        return <u {...attributes}>{children}</u>;\n      case \"italic\":\n        return <em {...attributes}>{children}</em>;\n      case \"code\":\n        return <CodeMark {...props} {...props.attributes} />;\n      case \"samp\":\n        return <SampMark {...props} {...props.attributes} />;\n      case \"var\":\n        return <VarMark {...props} {...props.attributes} />;\n      case \"sub\":\n        return <SubMark {...props} {...props.attributes} />;\n      case \"sup\":\n        return <SupMark {...props} {...props.attributes} />;\n      default:\n        return next();\n    }\n  };\n\n  onKeyDown = (event, editor, next) => {\n    if (!event.ctrlKey) return next();\n\n    switch (event.key) {\n      case \"`\":\n        event.preventDefault();\n        editor.toggleMark(\"code\");\n        break;\n      case \"q\":\n        event.preventDefault();\n        editor.toggleMark(\"code\");\n        break;\n      case \"b\":\n        event.preventDefault();\n        editor.toggleMark(\"bold\");\n        break;\n      case \"i\":\n        event.preventDefault();\n        editor.toggleMark(\"italic\");\n        break;\n      default:\n        return next();\n    }\n  };\n\n  renderNode = (props, editor, next) => {\n    const { attributes, node, children, isFocused } = props;\n    const align = node.data.get(\"align\");\n    const style = align\n      ? {\n          textAlign: align\n        }\n      : {};\n\n    switch (node.type) {\n      case \"image\":\n        const src = node.data.get(\"src\");\n        return (\n          <img\n            src={src}\n            className={isFocused ? \"selected\" : \"\"}\n            {...attributes}\n          />\n        );\n      case \"heading-1\":\n        return (\n          <h1 {...attributes} style={style}>\n            {children}\n          </h1>\n        );\n      case \"heading-2\":\n        return (\n          <h2 {...attributes} style={style}>\n            {children}\n          </h2>\n        );\n      case \"heading-3\":\n        return (\n          <h3 {...attributes} style={style}>\n            {children}\n          </h3>\n        );\n      case \"paragraph\":\n        return (\n          <p {...attributes} style={style}>\n            {children}\n          </p>\n        );\n      case \"div\":\n        return (\n          <Div {...attributes} style={style} id={node.data.get(\"id\")}>\n            {children}\n          </Div>\n        );\n      case \"hr\":\n        return <hr {...attributes} />;\n      default:\n        return next();\n    }\n  };\n\n  renderEditor = (props, editor, next) => {\n    const children = next();\n    const wordCount = props.value.document\n      .getBlocks()\n      .reduce((memo, b) => memo + b.text.trim().split(/\\s+/).length, 0);\n    return (\n      <div>\n        <div>{children}</div>\n        <WordCounter>Word Count: {wordCount}</WordCounter>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <ToolbarLayout>\n          <FormatToolbar editor={this.editor} onChange={this.onChange} />\n          <DataToolbar editor={this.editor} onChange={this.onChange} />\n        </ToolbarLayout>\n\n        <Layout>\n          <BlocksToolbar editor={this.editor} onChange={this.onChange} />\n          <EditorWrapper>\n            <Editor\n              plugins={plugins}\n              value={this.state.value}\n              onChange={this.onChange}\n              onKeyDown={this.onKeyDown}\n              renderMark={this.renderMark}\n              renderNode={this.renderNode}\n              renderEditor={this.renderEditor}\n              schema={schema}\n              ref={editor => (this.editor = editor)}\n            />\n          </EditorWrapper>\n          <Viewer editor={this.editor} />\n        </Layout>\n      </>\n    );\n  }\n}\n\nconst Div = styled.div`\n  border: 1px dotted red;\n  position: relative;\n  padding: 15px 3px 5px;\n  margin-bottom: 2px;\n  &::after {\n    content: \"${props => props.id}\";\n    position: absolute;\n    top:0;\n    right:0;\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n  }\n`;\n\nconst EditorWrapper = styled.div`\n  max-height: 100vh;\n  overflow: auto;\n  padding-right: 20px;\n`;\n\nconst ToolbarLayout = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  position: fixed;\n  display: grid;\n  top: 0;\n  grid-template-columns: auto auto;\n  grid-column-gap: 50px;\n  background: white;\n`;\n\nconst Layout = styled.div`\n  margin-top: 50px;\n  display: grid;\n\n  grid-column-gap: 40px;\n\n  @media (min-width: 720px) {\n    grid-template-columns: 50% 50%;\n  }\n`;\n\nconst WordCounter = styled(\"span\")`\n  margin-top: 10px;\n  padding: 12px;\n  background-color: #ebebeb;\n  display: inline-block;\n`;\n\nexport default Nirmaan;\n","import React from \"react\";\n\nexport const listPlugin = options => {\n  return {\n    commands: {\n      insertUnorderedList: editor => {\n        editor\n          .setBlocks(\"list-item\")\n          .wrapBlock(\"ul-list\")\n          .focus();\n      },\n      insertOrderedList: editor => {\n        editor\n          .setBlocks(\"list-item\")\n          .wrapBlock(\"ol-list\")\n          .focus();\n      },\n      unwrapList: editor => {\n        editor\n          .unwrapBlock(\"ul-list\")\n          .unwrapBlock(\"ol-list\")\n          .focus();\n      }\n    },\n    queries: {\n      isList: editor => {\n        return editor.value.blocks.some(node => node.type === \"list-item\");\n      },\n      isParagraph: editor => {\n        return editor.value.blocks.some(node => node.type === \"paragraph\");\n      },\n      isBlockEmpty: editor => {\n        return editor.value.endText && editor.value.endText.text === \"\";\n      }\n    },\n    renderNode: (props, editor, next) => {\n      const { attributes, node, children } = props;\n      switch (node.type) {\n        case \"ul-list\":\n          return <ul {...attributes}>{children}</ul>;\n        case \"ol-list\":\n          return <ol {...attributes}>{children}</ol>;\n        case \"list-item\":\n          return <li {...attributes}>{children}</li>;\n        default:\n          return next();\n      }\n    },\n    onKeyDown: (event, editor, next) => {\n      if (editor.isList() && editor.isBlockEmpty() && event.keyCode === 13) {\n        event.preventDefault();\n        editor\n          .setBlocks(\"paragraph\")\n          .unwrapList()\n          .focus();\n      } else {\n        return next();\n      }\n    }\n  };\n};\n","import React from \"react\";\nimport { NoteNode } from \"../nodes/NoteNode\";\n\nexport const notePlugin = options => {\n  return {\n    commands: {\n      insertNote: editor => {\n        editor.insertBlock(\"note\").unwrapList();\n      }\n    },\n    renderNode: (props, editor, next) => {\n      const { node } = props;\n      const align = node.data.get(\"align\");\n\n      const style = align\n        ? {\n            textAlign: align\n          }\n        : {};\n\n      switch (node.type) {\n        case \"note\":\n          return <NoteNode {...props} style={style} />;\n        default:\n          return next();\n      }\n    }\n  };\n};\n","import { ALIGN } from \"../consts\";\n\nexport const alignPlugin = options => {\n  return {\n    queries: {\n      getData: editor => {\n        return editor.value.document.nodes.reduce((prev, next) => {\n          return {\n            ...prev,\n            ...next.get(\"data\").toJS()\n          };\n        }, {});\n      }\n    },\n    commands: {\n      alignLeft: editor => {\n        editor.setBlocks({\n          data: {\n            ...editor.getData(),\n            align: ALIGN.LEFT\n          }\n        });\n      },\n      alignCenter: editor => {\n        editor.setBlocks({\n          data: {\n            ...editor.getData(),\n            align: ALIGN.CENTER\n          }\n        });\n      },\n      alignRight: editor => {\n        editor.setBlocks({\n          data: {\n            ...editor.getData(),\n            align: ALIGN.RIGHT\n          }\n        });\n      }\n    }\n  };\n};\n","import React from \"react\";\n\nexport const linkPlugin = options => {\n  return {\n    commands: {\n      wrapLink: (editor, href) => {\n        editor.wrapInline({\n          type: \"link\",\n          data: { href }\n        });\n        editor.moveToEnd();\n      },\n      unwrapLink: editor => {\n        editor.unwrapInline(\"link\");\n      }\n    },\n    queries: {\n      hasLinks: editor => {\n        const { value } = editor;\n        return value.inlines.some(inline => inline.type === \"link\");\n      }\n    },\n    renderNode: (props, editor, next) => {\n      const { attributes, node, children } = props;\n      switch (node.type) {\n        case \"link\":\n          const { data } = node;\n          const href = data.get(\"href\");\n          return (\n            <a {...attributes} href={href}>\n              {children}\n            </a>\n          );\n        default:\n          return next();\n      }\n    }\n  };\n};\n","import { getEventTransfer } from \"slate-react\";\nimport htmlSerializer from \"../serializers/HtmlSerializer\";\n\nexport const pasteHtmlPlugin = options => {\n  return {\n    onPaste: (event, editor, next) => {\n      const transfer = getEventTransfer(event);\n      if (transfer.type !== \"html\") return next();\n      console.log(\"I am pasting yo\");\n      const { document } = htmlSerializer.deserialize(transfer.html);\n      editor.insertFragment(document);\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Value } from \"slate\";\nimport Nirmaan from \"./Nirmaan\";\n\nconst existingValue = JSON.parse(localStorage.getItem(\"content\"));\nconst initialValue = Value.fromJSON(\n  existingValue || {\n    document: {\n      nodes: [\n        {\n          object: \"block\",\n          type: \"paragraph\",\n          nodes: [\n            {\n              object: \"text\",\n              leaves: [\n                {\n                  text: \"A line of text in a paragraph.\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nirmaan defaultValue={initialValue} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"editor\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}