{"version":3,"sources":["styles/fonts.js","marks/CodeMark.js","nodes/CodeNode.js","nodes/NonExecutableCodeNode.js","nodes/SampleOutput.js","nodes/PreNode.js","marks/HotKeys.js","plugins/codePlugin.js","styles/palette.js","components/Buttons.js","components/FormElements.js","toolbars/Popup.js","toolbars/FormatToolBar.js","toolbars/BlocksToolbar.js","components/Image.js","serializers/HtmlSerializer.js","toolbars/ExportToolbar.js","Viewer.js","consts.js","nodes/NoteNode.js","toolbars/DataToolbar.js","marks/SubSupMark.js","Nirmaan.js","plugins/listPlugin.js","plugins/notePlugin.js","plugins/alignPlugin.js","plugins/linkPlugin.js","plugins/pasteHtmlPlugin.js","App.js","serviceWorker.js","index.js"],"names":["fontFamilies","CodeMark","props","children","attributes","react_default","a","createElement","InlineCode","styled","code","_templateObject","SampMark","Samp","samp","_templateObject2","VarMark","Var","_templateObject3","CodeNode","output","node","data","get","CodeOutput","Pre","Code","CodeNode_templateObject","pre","CodeNode_templateObject2","CodeNode_templateObject3","NonExecutableCodeNode","NonExecutableCodeNode_Pre","NonExecutableCodeNode_Code","NonExecutableCodeNode_templateObject","NonExecutableCodeNode_templateObject2","SampleOutput","SampleOutput_Pre","SampleOutput_Samp","SampleOutput_templateObject","SampleOutput_templateObject2","PreNode","PreNode_Pre","PreNode_templateObject","options","type","key","MarkHotKey","palette","Button","button","Buttons_templateObject","BlockButton","Buttons_templateObject2","InlineButton","Buttons_templateObject3","PrimaryButton","_templateObject4","Input","input","FormElements_templateObject","Label","textarea","FormElements_templateObject2","label","FormElements_templateObject3","div","FormElements_templateObject4","PopupWrapper","Popup_templateObject","FormatToolbar","editor","FormatToolbarWrapper","className","index_es","icon","faBold","onClick","toggleMark","focus","faItalic","faUnderline","faCode","faAlignLeft","alignLeft","faAlignCenter","alignCenter","faAlignRight","alignRight","hasLinks","faUnlink","unwrapLink","reactjs_popup_es","modal","trigger","faLink","close","FormatToolBar_InsertLinkPopup","Object","assign","closePopup","InsertLinkPopup","_useState","useState","_useState2","slicedToArray","linkUrl","setLinkUrl","_useState3","_useState4","linkTitle","setLinkTitle","_useState5","_useState6","linkText","setLinkText","isCollapsed","value","selection","Fragment","onChange","e","target","preventDefault","href","title","insertText","moveFocusBackward","length","wrapLink","FormatToolBar_templateObject","BlocksToolbar","BlocksToolbarWrapper","isList","isBlockEmpty","insertBlock","unwrapList","setBlocks","faParagraph","faCircle","size","inverse","faChevronCircleRight","moveToEndOfBlock","faHeading","faImage","BlocksToolbar_InsertImagePopup","insertUnorderedList","faListUl","faListOl","insertOrderedList","faStickyNote","insertNote","faDatabase","BlocksToolbar_InsertMetadataPopup","faTable","insertTable","isSelectionInTable","removeTable","insertRow","removeRow","insertColumn","removeColumn","toggleTableHeaders","BlocksToolbar_templateObject","InsertImagePopup","imageUrl","setImageUrl","imageTitle","setImageTitle","imageAlt","setImageAlt","image","src","alt","InsertMetadataPopup","block","startBlock","defaultMeta","entries","toJS","map","_ref","_ref2","_useState7","_useState8","meta","setMeta","metaInputs","m","i","MetaDataFormInputWrapper","newKey","oldMeta","concat","toConsumableArray","slice","newValue","CloseButton","faPlus","reduce","obj","setNodeByKey","BlocksToolbar_templateObject2","BlocksToolbar_templateObject3","Image_templateObject","selected","getHtmlAttributesFromSlate","attrs","o","attr","getHtmlAttributesFromHtmlElement","el","hasAttribute","getAttribute","isIterable","Symbol","iterator","renderChildrenWithLineBreaks","split","array","text","push","renderHeader","renderBody","rules","serialize","object","htmlAttrs","renderTable","deserialize","next","tag","tagName","toLowerCase","nodes","childNodes","childOfPre","classList","contains","parentNode","htmlSerializer","Html","ExportToolbar","setViewMode","viewMode","ExportToolbarWrapper","string","document","body","appendChild","select","execCommand","removeChild","copyToClipboard","viewerContent","alert","ExportToolbar_templateObject","html","extra_liners","dangerouslySetInnerHTML","__html","JSON","stringify","toJSON","HtmlEditor","htmlEditorRef","useRef","content","editingMode","setEditingMode","setHtml","current","replace","HtmlEditorTextArea","ref","rows","onBlur","onFocus","readOnly","ViewerWrapper","Viewer_templateObject","Viewer_templateObject2","Viewer","Viewer_HtmlEditor","viewerRender","ExportToolbar_ExportToolbar","ALIGN","NoteNode","rest","objectWithoutProperties","Note","NoteNode_templateObject","DataToolbar","editorJson","setEditorJson","importHtml","setImportHtml","DataToolbarWrapper","Header","Value","fromJSON","parse","PasteArea","DataToolbar_templateObject","DataToolbar_templateObject2","DataToolbar_templateObject3","SubMark","Sub","sub","SubSupMark_templateObject","SupMark","Sup","sup","SubSupMark_templateObject2","existingValue","localStorage","getItem","schema","normalize","child","paragraph","Block","create","insertNodeByKey","blocks","isVoid","hr","plugins","SoftBreak","shift","DeepTable","commands","wrapBlock","unwrapBlock","queries","some","isParagraph","endText","renderNode","onKeyDown","event","keyCode","align","style","textAlign","NoteNode_NoteNode","getData","prev","objectSpread","isCode","isCodeBlock","onPaste","getEventTransfer","CodeNode_CodeNode","NonExecutableCodeNode_NonExecutableCodeNode","SampleOutput_SampleOutput","PreNode_PreNode","wrapInline","moveToEnd","unwrapInline","inlines","inline","transfer","console","log","insertFragment","Nirmaan","initialValue","leaves","state","_this","defaultValue","json","window","setItem","setState","renderMark","mark","CodeMark_CodeMark","CodeMark_SampMark","CodeMark_VarMark","SubSupMark_SubMark","SubSupMark_SupMark","ctrlKey","isFocused","Div","id","renderEditor","wordCount","getBlocks","memo","b","trim","WordCounter","_this2","this","ToolbarLayout","FormatToolBar_FormatToolbar","DataToolbar_DataToolbar","Layout","BlocksToolbar_BlocksToolbar","EditorWrapper","slate_react_es","src_Viewer","Component","Nirmaan_templateObject","Nirmaan_templateObject2","Nirmaan_templateObject3","Nirmaan_templateObject4","_templateObject5","App","src_Nirmaan","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d42ccdea.chunk.js","sourcesContent":["export const fontFamilies = {\n  MONOSPACE: \"Menlo, Consolas, Courier New\"\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const CodeMark = props => {\n  const { children, attributes } = props;\n  return <InlineCode {...{ attributes }}>{children}</InlineCode>;\n};\n\nconst InlineCode = styled.code`\n  background: #eee;\n\n  &:after {\n    content: \"<code>\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 5px;\n    margin-left: 2px;\n  }\n`;\n\nexport const SampMark = props => {\n  const { children, attributes } = props;\n  return <Samp {...{ attributes }}>{children}</Samp>;\n};\n\nconst Samp = styled.samp`\n  background: #eee;\n\n  &:after {\n    content: \"<samp>\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 5px;\n    margin-left: 2px;\n  }\n`;\n\nexport const VarMark = props => {\n  const { children, attributes } = props;\n  return <Var {...{ attributes }}>{children}</Var>;\n};\n\nconst Var = styled.samp`\n  background: #eee;\n\n  &:after {\n    content: \"<var>\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 5px;\n    margin-left: 2px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const CodeNode = props => {\n  const output = props.node.data.get(\"output\") ? (\n    <CodeOutput>\n      <strong>Output:</strong>\n      <br />\n      {props.node.data.get(\"output\")}\n    </CodeOutput>\n  ) : null;\n\n  return (\n    <div {...props.attributes}>\n      <Pre>\n        <Code>{props.children}</Code>\n      </Pre>\n      {output}\n    </div>\n  );\n};\n\nconst Code = styled.code``;\n\nconst CodeOutput = styled.pre`\n  background: #eee;\n  font-family: ${fontFamilies.MONOSPACE};\n  padding: 10px;\n  z-index: -1;\n`;\n\nconst Pre = styled.pre`\n  background: #eee;\n  position: relative;\n  z-index: -1;\n\n  &:after {\n    content: \"Executable Code\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const NonExecutableCodeNode = props => {\n  return (\n    <Pre {...props.attributes}>\n      <Code>{props.children}</Code>\n    </Pre>\n  );\n};\n\nconst Code = styled.code``;\n\nconst Pre = styled.pre`\n  background: #eee;\n  position: relative;\n  z-index: -1;\n\n  &:after {\n    content: \"Non Executable Code\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const SampleOutput = props => {\n  return (\n    <Pre {...props.attributes}>\n      <Samp>{props.children}</Samp>\n    </Pre>\n  );\n};\n\nconst Samp = styled.samp``;\n\nconst Pre = styled.pre`\n  background: #eee;\n  position: relative;\n  z-index: -1;\n\n  &:after {\n    content: \"Sample Output\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const PreNode = props => {\n  return <Pre {...props.attributes}>{props.children}</Pre>;\n};\n\nconst Pre = styled.pre`\n  background: #eee;\n  position: relative;\n  z-index: -1;\n\n  &:after {\n    content: \"preformatted\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n  }\n`;\n","export const MarkHotKey = options => {\n  const { type, key } = options;\n\n  return {\n    onKeyDown: (event, editor, next) => {\n      if (!event.ctrlKey || event.key !== key) return next();\n      event.preventDefault();\n      editor.toggleMark(type);\n    }\n  };\n};\n","import React from \"react\";\nimport { MarkHotKey } from \"../marks/HotKeys\";\nimport { CodeNode } from \"../nodes/CodeNode\";\nimport { NonExecutableCodeNode } from \"../nodes/NonExecutableCodeNode\";\nimport { SampleOutput } from \"../nodes/SampleOutput\";\nimport { getEventTransfer } from \"slate-react\";\nimport { PreNode } from \"../nodes/PreNode\";\n\nexport const codeMarkPlugin = MarkHotKey({\n  type: \"code\",\n  key: \"`\"\n});\n\nexport const isCodeBlock = block => {\n  return (\n    block.type === \"code\" ||\n    block.type === \"nonexecutable-code\" ||\n    block.type === \"sample-output\"\n  );\n};\n\nexport const codeNodePlugin = options => {\n  return {\n    queries: {\n      isCode: editor => {\n        return editor.value.blocks.some(block => isCodeBlock(block));\n      }\n    },\n    onPaste: (event, editor, next) => {\n      const { text } = getEventTransfer(event);\n      const isCode = editor.isCode();\n\n      if (!isCode) {\n        return next();\n      }\n\n      editor.insertText(text.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\"));\n    },\n    renderNode: (props, editor, next) => {\n      switch (props.node.type) {\n        case \"code\":\n          return <CodeNode {...props} />;\n        case \"nonexecutable-code\":\n          return <NonExecutableCodeNode {...props} />;\n        case \"sample-output\":\n          return <SampleOutput {...props} />;\n        case \"pre\":\n          return <PreNode {...props} />;\n        default:\n          return next();\n      }\n    }\n  };\n};\n","export const palette = {\n  GREY_BORDER_LIGHT: \"#eee\",\n  TEAL: \"#008080\",\n  WHITE: \"#F0F0F0\"\n};\n","import styled from \"styled-components\";\nimport { palette } from \"../styles/palette\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const Button = styled.button`\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const BlockButton = styled(Button)`\n  border: 1px solid #ccc;\n  padding: 7px;\n  margin: 3px;\n  cursor: pointer;\n  outline: none;\n  font-size: 13px;\n  color: #777;\n`;\n\nexport const InlineButton = styled(Button)`\n  font-size: 13px;\n`;\n\nexport const PrimaryButton = styled.button`\n  background: ${palette.TEAL};\n  color: ${palette.WHITE};\n  height: 30px;\n  margin: 0 10px;\n  font-size: 16px;\n  font-family: ${fontFamilies.MONOSPACE};\n`;\n","import { palette } from \"../styles/palette\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const Input = styled.input`\n  border: 1px solid ${palette.GREY_BORDER_LIGHT};\n  height: 29px;\n  padding: 0 10px;\n  font-family: ${fontFamilies.MONOSPACE};\n  outline: none;\n  width: 500px;\n  max-width: 90%;\n  font-size: 18px;\n`;\n\nexport const Textarea = styled.textarea`\n  border: 1px solid ${palette.GREY_BORDER_LIGHT};\n  height: 300px;\n  padding: 0 10px;\n  font-family: ${fontFamilies.MONOSPACE};\n  outline: none;\n  width: 500px;\n  font-size: 18px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: bold;\n  margin-top: 20px;\n`;\n\nexport const InlineForm = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n`;\n","import styled from \"styled-components\";\n\nexport const PopupWrapper = styled.div`\n  padding: 30px 50px;\n  z-index: 100000000;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBold,\n  faItalic,\n  faCode,\n  faAlignCenter,\n  faAlignLeft,\n  faAlignRight,\n  faLink,\n  faUnlink,\n  faUnderline\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { InlineButton, PrimaryButton } from \"../components/Buttons\";\nimport { Input, Label } from \"../components/FormElements\";\nimport Popup from \"reactjs-popup\";\nimport { PopupWrapper } from \"./Popup\";\n\nexport const FormatToolbar = props => {\n  const { editor } = props;\n  return (\n    <FormatToolbarWrapper>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faBold}\n          onClick={() => {\n            editor.toggleMark(\"bold\");\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faItalic}\n          onClick={() => {\n            editor.toggleMark(\"italic\");\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faUnderline}\n          onClick={() => {\n            editor.toggleMark(\"underline\");\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faCode}\n          onClick={() => {\n            editor.toggleMark(\"code\");\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <div\n          onClick={() => {\n            editor.toggleMark(\"samp\");\n            editor.focus();\n          }}\n        >\n          samp\n        </div>\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <div\n          onClick={() => {\n            editor.toggleMark(\"var\");\n            editor.focus();\n          }}\n        >\n          var\n        </div>\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faAlignLeft}\n          onClick={() => {\n            editor.alignLeft();\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faAlignCenter}\n          onClick={() => {\n            editor.alignCenter();\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faAlignRight}\n          onClick={() => {\n            editor.alignRight();\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <div\n          onClick={() => {\n            editor.toggleMark(\"sup\");\n            editor.focus();\n          }}\n        >\n          sup\n        </div>\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <div\n          onClick={() => {\n            editor.toggleMark(\"sub\");\n            editor.focus();\n          }}\n        >\n          sub\n        </div>\n      </InlineButton>\n      {editor &&\n        (editor.hasLinks() ? (\n          <InlineButton className=\"tooltip-icon-button\">\n            <FontAwesomeIcon\n              icon={faUnlink}\n              onClick={() => {\n                editor.unwrapLink();\n              }}\n            />\n          </InlineButton>\n        ) : (\n          <Popup\n            modal\n            trigger={\n              <InlineButton className=\"tooltip-icon-button\">\n                <FontAwesomeIcon icon={faLink} />\n              </InlineButton>\n            }\n          >\n            {close => <InsertLinkPopup {...props} closePopup={close} />}\n          </Popup>\n        ))}\n    </FormatToolbarWrapper>\n  );\n};\n\nconst InsertLinkPopup = props => {\n  const { editor, closePopup } = props;\n  const [linkUrl, setLinkUrl] = useState(\"\");\n  const [linkTitle, setLinkTitle] = useState(\"\");\n  const [linkText, setLinkText] = useState(\"\");\n\n  const isCollapsed = editor.value.selection.isCollapsed;\n\n  return (\n    <PopupWrapper>\n      {isCollapsed && (\n        <>\n          <Label>Text</Label>\n          <Input\n            type=\"text\"\n            value={linkText}\n            onChange={e => setLinkText(e.target.value)}\n          />\n        </>\n      )}\n      <Label>Link</Label>\n      <Input\n        type=\"text\"\n        value={linkUrl}\n        onChange={e => setLinkUrl(e.target.value)}\n      />\n      <Label>Title</Label>\n      <Input\n        type=\"text\"\n        value={linkTitle}\n        onChange={e => setLinkTitle(e.target.value)}\n      />\n      <PrimaryButton\n        onClick={e => {\n          e.preventDefault();\n          const href = linkUrl;\n          const title = linkTitle;\n\n          if (isCollapsed) {\n            editor\n              .insertText(linkText)\n              .moveFocusBackward(linkText.length)\n              .wrapLink({ href, title })\n              .focus();\n          } else {\n            editor.wrapLink({ href, title });\n          }\n          closePopup();\n        }}\n      >\n        Insert\n      </PrimaryButton>\n    </PopupWrapper>\n  );\n};\n\nconst FormatToolbarWrapper = styled.div`\n  display: flex;\n  border-bottom: solid 1.7px rgba(199, 198, 255, 0.15);\n  padding: 10px 0;\n  background: white;\n`;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHeading,\n  faCode,\n  faImage,\n  faParagraph,\n  faTable,\n  faListUl,\n  faListOl,\n  faCircle,\n  faChevronCircleRight,\n  faStickyNote,\n  faDatabase,\n  faPlus,\n  faCross\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { BlockButton, PrimaryButton, Button } from \"../components/Buttons\";\nimport styled from \"styled-components\";\nimport Popup from \"reactjs-popup\";\nimport { Input, InlineForm, Textarea, Label } from \"../components/FormElements\";\nimport { PopupWrapper } from \"./Popup\";\n\nexport const BlocksToolbar = props => {\n  const { editor, onChange } = props;\n\n  return (\n    <BlocksToolbarWrapper>\n      <BlockButton\n        onClick={() => {\n          if (editor.isList() && !editor.isBlockEmpty()) {\n            editor.insertBlock(\"paragraph\").unwrapList();\n          } else {\n            editor.setBlocks(\"paragraph\").unwrapList();\n          }\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faParagraph} />\n      </BlockButton>\n      <BlockButton\n        onClick={e => {\n          e.preventDefault();\n          editor.insertText(\"\\n\");\n          editor.focus();\n        }}\n      >\n        &lt;br&gt;\n      </BlockButton>\n      <BlockButton\n        onClick={e => {\n          e.preventDefault();\n          editor.insertBlock(\"hr\");\n        }}\n      >\n        __\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"code\");\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faCode} />\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"nonexecutable-code\");\n          editor.focus();\n        }}\n      >\n        <span className=\"fa-layers fa-fw\">\n          <FontAwesomeIcon icon={faCircle} size=\"lg\" />\n          <FontAwesomeIcon icon={faCode} size=\"xs\" inverse />\n        </span>\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"sample-output\");\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faChevronCircleRight} />\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"heading-1\");\n          !editor.isBlockEmpty() &&\n            editor\n              .moveToEndOfBlock()\n              .insertBlock(\"paragraph\")\n              .unwrapList();\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faHeading} />\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"heading-2\");\n          !editor.isBlockEmpty() &&\n            editor\n              .moveToEndOfBlock()\n              .insertBlock(\"paragraph\")\n              .unwrapList();\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faHeading} size=\"sm\" />\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"heading-3\");\n          !editor.isBlockEmpty() &&\n            editor\n              .moveToEndOfBlock()\n              .insertBlock(\"paragraph\")\n              .unwrapList();\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faHeading} size=\"xs\" />\n      </BlockButton>\n      <Popup\n        modal\n        trigger={\n          <BlockButton className=\"tooltip-icon-button\">\n            <FontAwesomeIcon icon={faImage} />\n          </BlockButton>\n        }\n      >\n        {close => <InsertImagePopup {...props} closePopup={close} />}\n      </Popup>\n\n      <BlockButton\n        onClick={e => {\n          e.preventDefault();\n          if (!editor.isList()) {\n            onChange(editor.insertUnorderedList());\n          } else {\n            onChange(editor.unwrapList());\n          }\n        }}\n      >\n        <FontAwesomeIcon icon={faListUl} />\n      </BlockButton>\n      <BlockButton>\n        <FontAwesomeIcon\n          icon={faListOl}\n          onClick={e => {\n            e.preventDefault();\n            if (!editor.isList()) {\n              onChange(editor.insertOrderedList());\n            } else {\n              onChange(editor.unwrapList());\n            }\n          }}\n        />\n      </BlockButton>\n      <BlockButton>\n        <div\n          onClick={e => {\n            e.preventDefault();\n            editor.setBlocks(\"pre\");\n          }}\n        >\n          pre\n        </div>\n      </BlockButton>\n      <BlockButton>\n        <FontAwesomeIcon\n          icon={faStickyNote}\n          onClick={e => {\n            e.preventDefault();\n            onChange(editor.insertNote());\n          }}\n        />\n      </BlockButton>\n      <Popup\n        trigger={\n          <BlockButton>\n            <FontAwesomeIcon\n              icon={faDatabase}\n              onClick={e => {\n                e.preventDefault();\n              }}\n            />\n          </BlockButton>\n        }\n        modal\n      >\n        {close => <InsertMetadataPopup {...props} closePopup={close} />}\n      </Popup>\n\n      <BlockButton>\n        <FontAwesomeIcon\n          icon={faTable}\n          onClick={e => {\n            e.preventDefault();\n            onChange(editor.insertTable().unwrapList());\n          }}\n        />\n      </BlockButton>\n      {editor && editor.isSelectionInTable() && (\n        <>\n          <button onClick={() => onChange(editor.removeTable())}>\n            Delete Table\n          </button>\n          <button onClick={() => onChange(editor.insertRow())}>\n            Insert Row\n          </button>\n          <button onClick={() => onChange(editor.removeRow())}>\n            Delete Row\n          </button>\n          <button onClick={() => onChange(editor.insertColumn())}>\n            Insert Column\n          </button>\n          <button onClick={() => onChange(editor.removeColumn())}>\n            Delete Column\n          </button>\n          <button onClick={() => onChange(editor.toggleTableHeaders())}>\n            Toggle header\n          </button>\n        </>\n      )}\n    </BlocksToolbarWrapper>\n  );\n};\n\nconst BlocksToolbarWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  left: 0;\n  top: 4%;\n`;\n\nconst InsertImagePopup = props => {\n  const { editor, closePopup } = props;\n  const [imageUrl, setImageUrl] = useState(\"https://placekitten.com/200/300\");\n  const [imageTitle, setImageTitle] = useState(\"\");\n  const [imageAlt, setImageAlt] = useState(\"\");\n\n  return (\n    <PopupWrapper>\n      <>\n        <Label>Url</Label>\n        <Input\n          type=\"text\"\n          value={imageUrl}\n          onChange={e => setImageUrl(e.target.value)}\n        />\n        <Label>Alt</Label>\n        <Input\n          type=\"text\"\n          value={imageAlt}\n          onChange={e => setImageAlt(e.target.value)}\n        />\n        <Label>Title</Label>\n        <Input\n          type=\"text\"\n          value={imageTitle}\n          onChange={e => setImageTitle(e.target.value)}\n        />\n        <PrimaryButton\n          onClick={e => {\n            e.preventDefault();\n            const image = {\n              type: \"image\",\n              data: {\n                src: imageUrl,\n                title: imageTitle,\n                alt: imageAlt\n              }\n            };\n            editor.isBlockEmpty()\n              ? editor.setBlocks(image)\n              : editor.insertBlock(image);\n            editor.insertBlock(\"paragraph\");\n            editor.focus();\n            closePopup();\n          }}\n        >\n          Insert\n        </PrimaryButton>\n      </>\n    </PopupWrapper>\n  );\n};\n\nconst InsertMetadataPopup = props => {\n  const { editor, closePopup } = props;\n\n  const block = editor.value.startBlock;\n\n  let defaultMeta = Object.entries(block.data.toJS()).map(([key, value]) => {\n    return {\n      key,\n      value\n    };\n  });\n\n  if (defaultMeta.length === 0) defaultMeta = [{ key: \"\", value: \"\" }];\n\n  const [meta, setMeta] = useState(defaultMeta);\n\n  const metaInputs = meta.map((m, i) => {\n    return (\n      <MetaDataFormInputWrapper key={i}>\n        <div>\n          <Label>Key</Label>\n          <Input\n            type=\"text\"\n            value={m.key}\n            onChange={e => {\n              const newKey = e.target.value;\n              setMeta(oldMeta => {\n                return [\n                  ...oldMeta.slice(0, i),\n                  {\n                    key: newKey,\n                    value: oldMeta[i].value\n                  },\n                  ...oldMeta.slice(i + 1)\n                ];\n              });\n            }}\n          />\n        </div>\n        <div>\n          <Label>Value</Label>\n          <Input\n            value={m.value}\n            onChange={e => {\n              const newValue = e.target.value;\n              setMeta(oldMeta => {\n                return [\n                  ...oldMeta.slice(0, i),\n                  {\n                    key: oldMeta[i].key,\n                    value: newValue\n                  },\n                  ...oldMeta.slice(i + 1)\n                ];\n              });\n            }}\n          />\n        </div>\n        <div>\n          <CloseButton\n            onClick={() => {\n              setMeta(oldMeta => {\n                return [...oldMeta.slice(0, i), ...oldMeta.slice(i + 1)];\n              });\n            }}\n          >\n            ×\n          </CloseButton>\n        </div>\n      </MetaDataFormInputWrapper>\n    );\n  });\n\n  return (\n    <PopupWrapper>\n      <h2>Update metadata</h2>\n      {metaInputs}\n      <Button\n        onClick={() => setMeta(meta => [...meta, { key: \"\", value: \"\" }])}\n      >\n        <FontAwesomeIcon icon={faPlus} />\n      </Button>\n      <PrimaryButton\n        onClick={e => {\n          e.preventDefault();\n          const data = meta.reduce((obj, m) => {\n            obj[m.key] = m.value;\n            return obj;\n          }, {});\n\n          editor.setNodeByKey(block.key, { data });\n\n          editor.focus();\n          closePopup();\n        }}\n      >\n        Update metadata\n      </PrimaryButton>\n    </PopupWrapper>\n  );\n};\n\nconst CloseButton = styled.div`\n  line-height: 100px;\n  font-size: 25px;\n  padding-left: 10px;\n  padding-right: 10px;\n  font-weight: thin;\n  cursor: pointer;\n`;\n\nconst MetaDataFormInputWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 45% 45% 10%;\n  width: 100%;\n`;\n","import styled from \"styled-components\";\n\nexport const Image = styled(\"img\")`\n  display: block;\n  max-width: 100%;\n  box-shadow: ${props => (props.selected ? \"0 0 0 2px blue;\" : \"none\")};\n`;\n","import React from \"react\";\nimport Html from \"slate-html-serializer\";\n\nconst attributes = [\n  \"id\",\n  \"class\",\n  \"name\",\n  \"src\",\n  \"alt\",\n  \"href\",\n  \"title\",\n  \"width\",\n  \"height\"\n];\n\nconst getHtmlAttributesFromSlate = obj => {\n  if (!obj.data) return {};\n  const attrs = obj.data.toJS();\n\n  const htmlAttrs = attributes.reduce((o, attr) => {\n    if (attrs[attr]) {\n      o[attr] = attrs[attr];\n    }\n    return o;\n  }, {});\n  return htmlAttrs;\n};\n\nconst getHtmlAttributesFromHtmlElement = el => {\n  const data = attributes.reduce((o, attr) => {\n    if (el.hasAttribute && el.hasAttribute(attr)) {\n      o[attr] = el.getAttribute(attr);\n    }\n    return o;\n  }, {});\n  return data;\n};\n\nconst isIterable = obj => {\n  if (obj == null) {\n    return false;\n  }\n  return typeof obj[Symbol.iterator] === \"function\";\n};\n\nconst renderChildrenWithLineBreaks = obj => {\n  if (isIterable(obj) && typeof obj !== \"string\") {\n    return obj.map(o => renderChildrenWithLineBreaks(o));\n  }\n  if (typeof obj === \"string\") {\n    return obj.split(\"\\n\").reduce((array, text, i) => {\n      if (i !== 0) array.push(<br key={i} />);\n      array.push(text);\n      return array;\n    }, []);\n  }\n  return obj;\n};\n\nconst renderHeader = obj => {\n  if (isIterable(obj)) {\n    return obj.map(o => renderHeader(o));\n  }\n  if (obj.type === \"tr\") {\n    return (\n      <thead>\n        <tr>{renderHeader(obj.props.children)}</tr>\n      </thead>\n    );\n  }\n\n  if (obj.type === \"td\") {\n    return <th>{obj.props.children}</th>;\n  }\n  return obj;\n};\n\nconst renderBody = obj => {\n  return <tbody>{obj}</tbody>;\n};\n\nconst renderTable = obj => {\n  return [renderHeader(obj.slice(0, 1)), renderBody(obj.slice(1))];\n};\n\nconst rules = [\n  {\n    serialize: (obj, children) => {\n      if (obj.object === \"block\") {\n        const htmlAttrs = getHtmlAttributesFromSlate(obj);\n\n        switch (obj.type) {\n          case \"code\":\n            return (\n              <pre {...htmlAttrs} className=\"exec\">\n                <code>{children}</code>\n              </pre>\n            );\n          case \"nonexecutable-code\":\n            return (\n              <pre {...htmlAttrs}>\n                <code>{children}</code>\n              </pre>\n            );\n          case \"sample-output\":\n            return (\n              <pre {...htmlAttrs}>\n                <samp>{children}</samp>\n              </pre>\n            );\n          case \"image\":\n            return <img {...htmlAttrs} />;\n          case \"paragraph\":\n            return (\n              <p {...htmlAttrs}>{renderChildrenWithLineBreaks(children)}</p>\n            );\n          case \"heading-1\":\n            return <h1 {...htmlAttrs}>{children}</h1>;\n          case \"heading-2\":\n            return <h2 {...htmlAttrs}>{children}</h2>;\n          case \"heading-3\":\n            return <h3 {...htmlAttrs}>{children}</h3>;\n          case \"ul-list\":\n            return <ul {...htmlAttrs}>{children}</ul>;\n          case \"ol-list\":\n            return <ol {...htmlAttrs}>{children}</ol>;\n          case \"list-item\":\n            return (\n              <li {...htmlAttrs}>{renderChildrenWithLineBreaks(children)}</li>\n            );\n          case \"table\":\n            return <table {...htmlAttrs}>{renderTable(children)}</table>;\n          case \"table_header\":\n            return <thead {...htmlAttrs}>{children}</thead>;\n          case \"table_body\":\n            return <tbody {...htmlAttrs}>{children}</tbody>;\n          case \"table_row\":\n            return <tr {...htmlAttrs}>{children}</tr>;\n          case \"table_cell\":\n            return <td {...htmlAttrs}>{children}</td>;\n          case \"table_header_cell\":\n            return <th {...htmlAttrs}>{children}</th>;\n          case \"pre\":\n            return <pre {...htmlAttrs}>{children}</pre>;\n          case \"hr\":\n            return <hr {...htmlAttrs} />;\n          case \"div\":\n            return <div {...htmlAttrs}>{children}</div>;\n          default:\n            return <p {...htmlAttrs}>{children}</p>;\n        }\n      }\n    },\n    deserialize: (el, next) => {\n      const tag = el.tagName.toLowerCase();\n      const data = getHtmlAttributesFromHtmlElement(el);\n\n      if (tag === \"div\") {\n        return {\n          object: \"block\",\n          type: \"div\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"p\") {\n        return {\n          object: \"block\",\n          type: \"paragraph\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"h1\") {\n        return {\n          object: \"block\",\n          type: \"heading-1\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"h2\") {\n        return {\n          object: \"block\",\n          type: \"heading-2\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"h3\") {\n        return {\n          object: \"block\",\n          type: \"heading-3\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"ul\") {\n        return {\n          object: \"block\",\n          type: \"ul-list\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"ol\") {\n        return {\n          object: \"block\",\n          type: \"ol-list\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"li\") {\n        return {\n          object: \"block\",\n          type: \"list-item\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"table\") {\n        return {\n          object: \"block\",\n          type: \"table\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"thead\") {\n        return;\n      }\n      if (tag === \"tbody\") {\n        return;\n      }\n      if (tag === \"tr\") {\n        return {\n          object: \"block\",\n          type: \"table_row\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"td\") {\n        return {\n          object: \"block\",\n          type: \"table_cell\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"th\") {\n        return {\n          object: \"block\",\n          type: \"table_cell\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n      if (tag === \"hr\") {\n        return {\n          object: \"block\",\n          type: \"hr\",\n          data\n        };\n      }\n      if (tag === \"pre\") {\n        const childOfPre = el.childNodes[0];\n        if (\n          childOfPre &&\n          childOfPre.tagName &&\n          childOfPre.tagName.toLowerCase() === \"code\" &&\n          childOfPre.classList.contains(\"exec\")\n        ) {\n          return {\n            object: \"block\",\n            type: \"code\",\n            nodes: next(childOfPre.childNodes),\n            data\n          };\n        }\n\n        if (\n          childOfPre &&\n          childOfPre.tagName &&\n          childOfPre.tagName.toLowerCase() === \"code\" &&\n          !childOfPre.classList.contains(\"exec\")\n        ) {\n          return {\n            object: \"block\",\n            type: \"nonexecutable-code\",\n            nodes: next(childOfPre.childNodes),\n            data\n          };\n        }\n\n        if (\n          childOfPre &&\n          childOfPre.tagName &&\n          childOfPre.tagName.toLowerCase() === \"samp\"\n        ) {\n          return {\n            object: \"block\",\n            type: \"sample-output\",\n            nodes: next(childOfPre.childNodes),\n            data\n          };\n        }\n        return {\n          object: \"block\",\n          type: \"pre\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n\n      if (tag === \"img\") {\n        return {\n          object: \"block\",\n          type: \"image\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n    }\n  },\n  {\n    serialize: (obj, children) => {\n      if (obj.object === \"mark\") {\n        switch (obj.type) {\n          case \"bold\":\n            return <strong>{children}</strong>;\n          case \"underline\":\n            return <u>{children}</u>;\n          case \"italic\":\n            return <em>{children}</em>;\n          case \"code\":\n            return <code>{children}</code>;\n          case \"var\":\n            return <var>{children}</var>;\n          case \"samp\":\n            return <samp>{children}</samp>;\n          case \"sup\":\n            return <sup>{children}</sup>;\n          case \"sub\":\n            return <sub>{children}</sub>;\n          default:\n            return;\n        }\n      }\n    },\n    deserialize: (el, next) => {\n      const tag = el.tagName.toLowerCase();\n      if (tag === \"strong\") {\n        return {\n          object: \"mark\",\n          type: \"bold\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"u\") {\n        return {\n          object: \"mark\",\n          type: \"underline\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"em\") {\n        return {\n          object: \"mark\",\n          type: \"italic\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"var\") {\n        return {\n          object: \"mark\",\n          type: \"var\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"sub\") {\n        return {\n          object: \"mark\",\n          type: \"sub\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"sup\") {\n        return {\n          object: \"mark\",\n          type: \"sup\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"code\" && el.parentNode.tagName.toLowerCase() !== \"pre\") {\n        return {\n          object: \"mark\",\n          type: \"code\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"samp\" && el.parentNode.tagName.toLowerCase() !== \"pre\") {\n        return {\n          object: \"mark\",\n          type: \"samp\",\n          nodes: next(el.childNodes)\n        };\n      }\n    }\n  },\n  {\n    serialize: (obj, children) => {\n      const htmlAttrs = getHtmlAttributesFromSlate(obj);\n      if (obj.object === \"inline\") {\n        switch (obj.type) {\n          case \"link\":\n            return <a {...htmlAttrs}>{children}</a>;\n          default:\n            return;\n        }\n      }\n    },\n    // Special case for links, to grab their href.\n    deserialize: (el, next) => {\n      const data = getHtmlAttributesFromHtmlElement(el);\n      if (el.tagName.toLowerCase() === \"a\") {\n        return {\n          object: \"inline\",\n          type: \"link\",\n          nodes: next(el.childNodes),\n          data\n        };\n      }\n    }\n  },\n  {\n    serialize(obj, children) {\n      if (obj.object === \"string\") {\n        return children;\n      }\n    }\n  }\n];\n\n// Create a new serializer instance with our `rules` from above.\nconst htmlSerializer = new Html({ rules });\n\nexport default htmlSerializer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { InlineButton } from \"../components/Buttons\";\nimport { viewerContent } from \"../Viewer\";\n\nconst copyToClipboard = string => {\n  const el = document.createElement(\"textarea\");\n  el.value = string;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n};\n\nexport const ExportToolbar = props => {\n  const { editor, setViewMode, viewMode } = props;\n  return (\n    <ExportToolbarWrapper>\n      <InlineButton onClick={() => setViewMode(\"OUTPUT\")}>Output</InlineButton>\n      <InlineButton onClick={() => setViewMode(\"HTML\")}>HTML</InlineButton>\n      <InlineButton\n        onClick={() => {\n          setViewMode(\"JSON\");\n        }}\n      >\n        JSON\n      </InlineButton>\n      <InlineButton\n        onClick={() => {\n          const content = viewerContent(editor, viewMode);\n          copyToClipboard(content);\n          alert(`Copied ${viewMode} to clipboard!`);\n        }}\n      >\n        Copy to Clipboard\n      </InlineButton>\n    </ExportToolbarWrapper>\n  );\n};\n\nconst ExportToolbarWrapper = styled.div`\n  top: 0;\n  right: 0;\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport htmlSerializer from \"./serializers/HtmlSerializer\";\nimport pretty from \"pretty\";\nimport { ExportToolbar } from \"./toolbars/ExportToolbar\";\nimport { html } from \"js-beautify\";\nimport ContentEditable from \"react-contenteditable\";\nimport { fontFamilies } from \"./styles/fonts\";\n\nexport const viewerContent = (editor, viewMode) => {\n  if (!editor) {\n    return \"\";\n  }\n\n  if (viewMode === \"HTML\") {\n    const prettyHtml = html(htmlSerializer.serialize(editor.value), {\n      extra_liners: [\n        \"p\",\n        \"img\",\n        \"h1\",\n        \"h2\",\n        \"h3\",\n        \"pre\",\n        \"ul\",\n        \"li\",\n        \"table\",\n        \"hr\",\n        \"div\"\n      ]\n    });\n    return prettyHtml;\n  } else if (viewMode === \"OUTPUT\") {\n    return (\n      <div\n        dangerouslySetInnerHTML={{\n          __html: htmlSerializer.serialize(editor.value)\n        }}\n      />\n    );\n  } else {\n    return JSON.stringify(editor.value.toJSON(), null, 4);\n  }\n};\n\nexport const viewerRender = (editor, viewMode) => {\n  if (viewMode === \"OUTPUT\") {\n    return viewerContent(editor, viewMode);\n  } else {\n    return (\n      <HtmlEditor content={viewerContent(editor, viewMode)} editor={editor} />\n    );\n  }\n};\n\nconst HtmlEditor = props => {\n  const htmlEditorRef = useRef(null);\n  const { content, editor } = props;\n\n  const [editingMode, setEditingMode] = useState(false);\n  const [html, setHtml] = useState(\"\");\n\n  return (\n    <div>\n      {!editingMode && (\n        <button\n          onClick={() => {\n            setEditingMode(true);\n            setHtml(content);\n            htmlEditorRef.current.focus();\n          }}\n        >\n          Edit HTML\n        </button>\n      )}\n      {editingMode && (\n        <button\n          onClick={() => {\n            editor.onChange({\n              value: htmlSerializer.deserialize(html.replace(/>\\s+</g, \"><\"))\n            });\n            setEditingMode(false);\n          }}\n        >\n          Update\n        </button>\n      )}\n      <HtmlEditorTextArea\n        ref={htmlEditorRef}\n        value={editingMode ? html : content}\n        rows={100}\n        onChange={e => setHtml(e.target.value)}\n        onBlur={e => {\n          editor.onChange({\n            value: htmlSerializer.deserialize(\n              e.target.value.replace(/>\\s+</g, \"><\")\n            )\n          });\n          setEditingMode(false);\n        }}\n        onFocus={e => {\n          setEditingMode(true);\n          setHtml(content);\n        }}\n        readOnly={!editingMode}\n      />\n    </div>\n  );\n};\n\nconst Viewer = props => {\n  const { editor } = props;\n\n  const [viewMode, setViewMode] = useState(\"OUTPUT\");\n  let content = viewerRender(editor, viewMode);\n\n  return (\n    <ViewerWrapper>\n      <ExportToolbar\n        editor={editor}\n        viewMode={viewMode}\n        setViewMode={setViewMode}\n      />\n      {content}\n    </ViewerWrapper>\n  );\n};\n\nconst ViewerWrapper = styled.div`\n  padding: 10px;\n\n  max-height: 100vh;\n  overflow: scroll;\n`;\n\nconst HtmlEditorTextArea = styled.textarea`\n  width: 100%;\n  outline: none;\n  border: none;\n  font-size: 0.9rem;\n  font-family: ${fontFamilies.MONOSPACE};\n`;\n\nexport default Viewer;\n","export const ALIGN = {\n  LEFT: \"left\",\n  CENTER: \"center\",\n  RIGHT: \"right\"\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const NoteNode = props => {\n  const { attributes, children, ...rest } = props;\n  return (\n    <Note {...attributes} {...rest}>\n      {children}\n    </Note>\n  );\n};\n\nconst Note = styled.div`\n  padding: 20px;\n  border: 1px solid #777;\n`;\n","import React, { useState } from \"react\";\nimport { Value } from \"slate\";\nimport styled from \"styled-components\";\nimport Popup from \"reactjs-popup\";\nimport { fontFamilies } from \"../styles/fonts\";\nimport { PrimaryButton } from \"../components/Buttons\";\nimport htmlSerializer from \"../serializers/HtmlSerializer\";\n\nexport const DataToolbar = props => {\n  const { onChange } = props;\n  const [editorJson, setEditorJson] = useState({});\n  const [importHtml, setImportHtml] = useState(\"<p></p>\");\n  return (\n    <DataToolbarWrapper>\n      <Popup modal trigger={<button>Import JSON</button>}>\n        {close => {\n          return (\n            <>\n              <Header>\n                <h3>Paste JSON here</h3>\n                <PrimaryButton\n                  onClick={() => {\n                    onChange({\n                      value: Value.fromJSON(JSON.parse(editorJson))\n                    });\n                    close();\n                  }}\n                >\n                  Import\n                </PrimaryButton>\n              </Header>\n\n              <PasteArea\n                rows={20}\n                onChange={e => setEditorJson(e.target.value)}\n              />\n            </>\n          );\n        }}\n      </Popup>\n      <Popup modal trigger={<button>Import HTML</button>}>\n        {close => {\n          return (\n            <>\n              <Header>\n                <h3>Paste HTML here</h3>\n\n                <PrimaryButton\n                  onClick={() => {\n                    onChange({\n                      value: htmlSerializer.deserialize(importHtml)\n                    });\n                    close();\n                  }}\n                >\n                  Import\n                </PrimaryButton>\n              </Header>\n\n              <PasteArea\n                rows={20}\n                onChange={e => {\n                  const html = e.target.value.replace(/>\\s+</g, \"><\");\n\n                  setImportHtml(html);\n                }}\n              />\n            </>\n          );\n        }}\n      </Popup>\n    </DataToolbarWrapper>\n  );\n};\n\nconst DataToolbarWrapper = styled.div`\n  justify-self: end;\n`;\n\nconst PasteArea = styled.textarea`\n  font-family: ${fontFamilies.MONOSPACE};\n  outline: none;\n  width: calc(100% - 50px);\n  margin: 0 auto;\n  display: block;\n`;\n\nconst Header = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  align-items: center;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const SubMark = props => {\n  const { children, attributes } = props;\n  return <Sub {...{ attributes }}>{children}</Sub>;\n};\n\nconst Sub = styled.sub``;\n\nexport const SupMark = props => {\n  const { children, attributes } = props;\n  return <Sup {...{ attributes }}>{children}</Sup>;\n};\n\nconst Sup = styled.sup``;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Editor } from \"slate-react\";\nimport { Value, Block } from \"slate\";\n\nimport { CodeMark, SampMark, VarMark } from \"./marks/CodeMark\";\nimport { codeNodePlugin } from \"./plugins/codePlugin\";\nimport { FormatToolbar } from \"./toolbars/FormatToolBar\";\nimport { BlocksToolbar } from \"./toolbars/BlocksToolbar\";\nimport { ImageNode } from \"./nodes/ImageNode\";\nimport SoftBreak from \"slate-soft-break\";\nimport DeepTable from \"slate-deep-table\";\nimport { listPlugin } from \"./plugins/listPlugin\";\nimport Viewer from \"./Viewer\";\nimport styled from \"styled-components\";\nimport { alignPlugin } from \"./plugins/alignPlugin\";\nimport { notePlugin } from \"./plugins/notePlugin\";\nimport { DataToolbar } from \"./toolbars/DataToolbar\";\nimport { linkPlugin } from \"./plugins/linkPlugin\";\nimport { pasteHtmlPlugin } from \"./plugins/pasteHtmlPlugin\";\nimport { SubMark, SupMark } from \"./marks/SubSupMark\";\nimport { fontFamilies } from \"./styles/fonts\";\n\nconst existingValue = JSON.parse(localStorage.getItem(\"content\"));\n\nconst schema = {\n  // This section is need for the image upload functionality, if this is not there, then we cannot add anything after an image.\n  document: {\n    normalize: (editor, { code, node, child }) => {\n      switch (code) {\n        case \"last_child_type_invalid\": {\n          const paragraph = Block.create(\"paragraph\");\n          return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n        }\n        default:\n          return;\n      }\n    }\n  },\n  blocks: {\n    image: {\n      isVoid: true\n    },\n    hr: {\n      isVoid: true\n    }\n  }\n};\n\nconst plugins = [\n  SoftBreak({ shift: true }),\n  DeepTable(),\n  listPlugin(),\n  notePlugin(),\n  alignPlugin(),\n  codeNodePlugin(),\n  linkPlugin(),\n  pasteHtmlPlugin()\n];\n\nclass Nirmaan extends Component {\n  // Set the initial value when the app is first constructed.\n\n  initialValue = Value.fromJSON(\n    existingValue || {\n      document: {\n        nodes: [\n          {\n            object: \"block\",\n            type: \"paragraph\",\n            nodes: [\n              {\n                object: \"text\",\n                leaves: [\n                  {\n                    text: \"A line of text in a paragraph.\"\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  );\n\n  state = {\n    value: this.initialValue || this.props.defaultValue\n  };\n\n  // On change, update the app's React state with the new editor value.\n  onChange = ({ value }) => {\n    const json = value.toJSON();\n    window.content = json;\n\n    const content = JSON.stringify(json);\n    localStorage.setItem(\"content\", content);\n\n    this.setState({ value });\n    this.props.onChange && this.props.onChange(json);\n  };\n\n  renderMark = (props, editor, next) => {\n    const { attributes, children } = props;\n    switch (props.mark.type) {\n      case \"bold\":\n        return <strong {...attributes}>{children}</strong>;\n      case \"underline\":\n        return <u {...attributes}>{children}</u>;\n      case \"italic\":\n        return <em {...attributes}>{children}</em>;\n      case \"code\":\n        return <CodeMark {...props} {...props.attributes} />;\n      case \"samp\":\n        return <SampMark {...props} {...props.attributes} />;\n      case \"var\":\n        return <VarMark {...props} {...props.attributes} />;\n      case \"sub\":\n        return <SubMark {...props} {...props.attributes} />;\n      case \"sup\":\n        return <SupMark {...props} {...props.attributes} />;\n      default:\n        return next();\n    }\n  };\n\n  onKeyDown = (event, editor, next) => {\n    if (!event.ctrlKey) return next();\n\n    switch (event.key) {\n      case \"`\":\n        event.preventDefault();\n        editor.toggleMark(\"code\");\n        break;\n      case \"q\":\n        event.preventDefault();\n        editor.toggleMark(\"code\");\n        break;\n      case \"b\":\n        event.preventDefault();\n        editor.toggleMark(\"bold\");\n        break;\n      case \"i\":\n        event.preventDefault();\n        editor.toggleMark(\"italic\");\n        break;\n      default:\n        return next();\n    }\n  };\n\n  renderNode = (props, editor, next) => {\n    const { attributes, node, children, isFocused } = props;\n    const align = node.data.get(\"align\");\n    const style = align\n      ? {\n          textAlign: align\n        }\n      : {};\n\n    switch (node.type) {\n      case \"image\":\n        const src = node.data.get(\"src\");\n        return (\n          <img\n            src={src}\n            className={isFocused ? \"selected\" : \"\"}\n            {...attributes}\n          />\n        );\n      case \"heading-1\":\n        return (\n          <h1 {...attributes} style={style}>\n            {children}\n          </h1>\n        );\n      case \"heading-2\":\n        return (\n          <h2 {...attributes} style={style}>\n            {children}\n          </h2>\n        );\n      case \"heading-3\":\n        return (\n          <h3 {...attributes} style={style}>\n            {children}\n          </h3>\n        );\n      case \"paragraph\":\n        return (\n          <p {...attributes} style={style}>\n            {children}\n          </p>\n        );\n      case \"div\":\n        return (\n          <Div {...attributes} style={style} id={node.data.get(\"id\")}>\n            {children}\n          </Div>\n        );\n      case \"hr\":\n        return <hr {...attributes} />;\n      default:\n        return next();\n    }\n  };\n\n  renderEditor = (props, editor, next) => {\n    const children = next();\n    const wordCount = props.value.document\n      .getBlocks()\n      .reduce((memo, b) => memo + b.text.trim().split(/\\s+/).length, 0);\n    return (\n      <div>\n        <div>{children}</div>\n        <WordCounter>Word Count: {wordCount}</WordCounter>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <ToolbarLayout>\n          <FormatToolbar editor={this.editor} onChange={this.onChange} />\n          <DataToolbar editor={this.editor} onChange={this.onChange} />\n        </ToolbarLayout>\n\n        <Layout>\n          <BlocksToolbar editor={this.editor} onChange={this.onChange} />\n          <EditorWrapper>\n            <Editor\n              plugins={plugins}\n              value={this.state.value}\n              onChange={this.onChange}\n              onKeyDown={this.onKeyDown}\n              renderMark={this.renderMark}\n              renderNode={this.renderNode}\n              renderEditor={this.renderEditor}\n              schema={schema}\n              ref={editor => (this.editor = editor)}\n            />\n          </EditorWrapper>\n          <Viewer editor={this.editor} />\n        </Layout>\n      </>\n    );\n  }\n}\n\nconst Div = styled.div`\n  border: 1px dotted red;\n  position: relative;\n  padding: 15px 3px 5px;\n  margin-bottom: 2px;\n  &::after {\n    content: \"${props => props.id}\";\n    position: absolute;\n    top:0;\n    right:0;\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n  }\n`;\n\nconst EditorWrapper = styled.div`\n  max-height: 100vh;\n  overflow: auto;\n  padding-right: 20px;\n`;\n\nconst ToolbarLayout = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  position: fixed;\n  display: grid;\n  top: 0;\n  grid-template-columns: auto auto;\n  grid-column-gap: 50px;\n  background: white;\n`;\n\nconst Layout = styled.div`\n  margin-top: 50px;\n  display: grid;\n\n  grid-column-gap: 40px;\n\n  @media (min-width: 720px) {\n    grid-template-columns: 50% 50%;\n  }\n`;\n\nconst WordCounter = styled(\"span\")`\n  margin-top: 10px;\n  padding: 12px;\n  background-color: #ebebeb;\n  display: inline-block;\n`;\n\nexport default Nirmaan;\n","import React from \"react\";\n\nexport const listPlugin = options => {\n  return {\n    commands: {\n      insertUnorderedList: editor => {\n        editor\n          .setBlocks(\"list-item\")\n          .wrapBlock(\"ul-list\")\n          .focus();\n      },\n      insertOrderedList: editor => {\n        editor\n          .setBlocks(\"list-item\")\n          .wrapBlock(\"ol-list\")\n          .focus();\n      },\n      unwrapList: editor => {\n        editor\n          .unwrapBlock(\"ul-list\")\n          .unwrapBlock(\"ol-list\")\n          .focus();\n      }\n    },\n    queries: {\n      isList: editor => {\n        return editor.value.blocks.some(node => node.type === \"list-item\");\n      },\n      isParagraph: editor => {\n        return editor.value.blocks.some(node => node.type === \"paragraph\");\n      },\n      isBlockEmpty: editor => {\n        return editor.value.endText && editor.value.endText.text === \"\";\n      }\n    },\n    renderNode: (props, editor, next) => {\n      const { attributes, node, children } = props;\n      switch (node.type) {\n        case \"ul-list\":\n          return <ul {...attributes}>{children}</ul>;\n        case \"ol-list\":\n          return <ol {...attributes}>{children}</ol>;\n        case \"list-item\":\n          return <li {...attributes}>{children}</li>;\n        default:\n          return next();\n      }\n    },\n    onKeyDown: (event, editor, next) => {\n      if (editor.isList() && editor.isBlockEmpty() && event.keyCode === 13) {\n        event.preventDefault();\n        editor\n          .setBlocks(\"paragraph\")\n          .unwrapList()\n          .focus();\n      } else {\n        return next();\n      }\n    }\n  };\n};\n","import React from \"react\";\nimport { NoteNode } from \"../nodes/NoteNode\";\n\nexport const notePlugin = options => {\n  return {\n    commands: {\n      insertNote: editor => {\n        editor.insertBlock(\"note\").unwrapList();\n      }\n    },\n    renderNode: (props, editor, next) => {\n      const { node } = props;\n      const align = node.data.get(\"align\");\n\n      const style = align\n        ? {\n            textAlign: align\n          }\n        : {};\n\n      switch (node.type) {\n        case \"note\":\n          return <NoteNode {...props} style={style} />;\n        default:\n          return next();\n      }\n    }\n  };\n};\n","import { ALIGN } from \"../consts\";\n\nexport const alignPlugin = options => {\n  return {\n    queries: {\n      getData: editor => {\n        return editor.value.document.nodes.reduce((prev, next) => {\n          return {\n            ...prev,\n            ...next.get(\"data\").toJS()\n          };\n        }, {});\n      }\n    },\n    commands: {\n      alignLeft: editor => {\n        editor.setBlocks({\n          data: {\n            ...editor.getData(),\n            align: ALIGN.LEFT\n          }\n        });\n      },\n      alignCenter: editor => {\n        editor.setBlocks({\n          data: {\n            ...editor.getData(),\n            align: ALIGN.CENTER\n          }\n        });\n      },\n      alignRight: editor => {\n        editor.setBlocks({\n          data: {\n            ...editor.getData(),\n            align: ALIGN.RIGHT\n          }\n        });\n      }\n    }\n  };\n};\n","import React from \"react\";\n\nexport const linkPlugin = options => {\n  return {\n    commands: {\n      wrapLink: (editor, attrs) => {\n        editor.wrapInline({\n          type: \"link\",\n          data: attrs\n        });\n        editor.moveToEnd();\n      },\n      unwrapLink: editor => {\n        editor.unwrapInline(\"link\");\n      }\n    },\n    queries: {\n      hasLinks: editor => {\n        const { value } = editor;\n        return value.inlines.some(inline => inline.type === \"link\");\n      }\n    },\n    renderNode: (props, editor, next) => {\n      const { attributes, node, children } = props;\n      switch (node.type) {\n        case \"link\":\n          const { data } = node;\n          const href = data.get(\"href\");\n          return (\n            <a {...attributes} href={href}>\n              {children}\n            </a>\n          );\n        default:\n          return next();\n      }\n    }\n  };\n};\n","import { getEventTransfer } from \"slate-react\";\nimport htmlSerializer from \"../serializers/HtmlSerializer\";\n\nexport const pasteHtmlPlugin = options => {\n  return {\n    onPaste: (event, editor, next) => {\n      const transfer = getEventTransfer(event);\n      if (transfer.type !== \"html\") return next();\n      console.log(\"I am pasting yo\");\n      const { document } = htmlSerializer.deserialize(transfer.html);\n      editor.insertFragment(document);\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Value } from \"slate\";\nimport Nirmaan from \"./Nirmaan\";\n\nconst existingValue = JSON.parse(localStorage.getItem(\"content\"));\nconst initialValue = Value.fromJSON(\n  existingValue || {\n    document: {\n      nodes: [\n        {\n          object: \"block\",\n          type: \"paragraph\",\n          nodes: [\n            {\n              object: \"text\",\n              leaves: [\n                {\n                  text: \"A line of text in a paragraph.\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nirmaan defaultValue={initialValue} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"editor\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}