{"version":3,"sources":["marks/BoldMark.js","styles/fonts.js","marks/CodeMark.js","nodes/CodeNode.js","nodes/NonExecutableCodeNode.js","nodes/SampleOutput.js","nodes/PreNode.js","marks/HotKeys.js","plugins/codePlugin.js","styles/palette.js","components/Buttons.js","components/FormElements.js","toolbars/Popup.js","toolbars/FormatToolBar.js","marks/ItalicMark.js","toolbars/BlocksToolbar.js","components/Image.js","nodes/ImageNode.js","serializers/HtmlSerializer.js","toolbars/ExportToolbar.js","Viewer.js","consts.js","nodes/NoteNode.js","toolbars/DataToolbar.js","marks/SubSupMark.js","Nirmaan.js","plugins/listPlugin.js","plugins/notePlugin.js","plugins/alignPlugin.js","plugins/linkPlugin.js","plugins/pasteHtmlPlugin.js","App.js","serviceWorker.js","index.js"],"names":["BoldMark","props","children","attributes","react_default","a","createElement","fontFamilies","CodeMark","InlineCode","styled","code","_templateObject","SampMark","Samp","samp","_templateObject2","VarMark","Var","_templateObject3","CodeNode","output","node","data","get","CodeOutput","Pre","Code","CodeNode_templateObject","pre","CodeNode_templateObject2","CodeNode_templateObject3","NonExecutableCodeNode","NonExecutableCodeNode_Pre","NonExecutableCodeNode_Code","NonExecutableCodeNode_templateObject","NonExecutableCodeNode_templateObject2","SampleOutput","SampleOutput_Pre","SampleOutput_Samp","SampleOutput_templateObject","SampleOutput_templateObject2","PreNode","PreNode_Pre","PreNode_templateObject","options","type","key","MarkHotKey","palette","Button","button","Buttons_templateObject","BlockButton","Buttons_templateObject2","InlineButton","Buttons_templateObject3","PrimaryButton","_templateObject4","Input","input","FormElements_templateObject","Textarea","textarea","FormElements_templateObject2","Label","label","FormElements_templateObject3","InlineForm","div","FormElements_templateObject4","PopupWrapper","Popup_templateObject","FormatToolbar","editor","onChange","FormatToolbarWrapper","className","index_es","icon","faBold","onClick","toggleMark","focus","faItalic","faCode","faAlignLeft","alignLeft","faAlignCenter","alignCenter","faAlignRight","alignRight","hasLinks","faUnlink","unwrapLink","reactjs_popup_es","modal","trigger","faLink","close","FormatToolBar_InsertLinkPopup","Object","assign","closePopup","InsertLinkPopup","_useState","useState","_useState2","slicedToArray","linkUrl","setLinkUrl","_useState3","_useState4","linkText","setLinkText","isCollapsed","value","selection","Fragment","e","target","preventDefault","href","insertText","moveFocusBackward","length","wrapLink","FormatToolBar_templateObject","ItalicMark","BlocksToolbar","BlocksToolbarWrapper","isList","isBlockEmpty","insertBlock","unwrapList","setBlocks","faParagraph","faCircle","size","inverse","faChevronCircleRight","moveToEndOfBlock","faHeading","faImage","BlocksToolbar_InsertImagePopup","insertUnorderedList","faListUl","faListOl","insertOrderedList","faStickyNote","insertNote","faDatabase","BlocksToolbar_InsertMetadataPopup","faTable","insertTable","isSelectionInTable","removeTable","insertRow","removeRow","insertColumn","removeColumn","toggleTableHeaders","BlocksToolbar_templateObject","InsertImagePopup","imageUrl","setImageUrl","image","src","InsertMetadataPopup","block","startBlock","keySeq","first","metaKey","setMetaKey","_useState5","_useState6","metaValue","setMetaValue","defaultValue","setNodeByKey","defineProperty","Image","Image_templateObject","selected","ImageNode","rules","serialize","obj","object","alt","deserialize","el","next","tag","tagName","toLowerCase","nodes","childNodes","childOfPre","classList","contains","getAttribute","parentNode","htmlSerializer","Html","ExportToolbar","setViewMode","viewMode","ExportToolbarWrapper","string","document","body","appendChild","select","execCommand","removeChild","copyToClipboard","viewerContent","alert","concat","ExportToolbar_templateObject","pretty","dangerouslySetInnerHTML","__html","JSON","stringify","toJSON","ViewerWrapper","Viewer_templateObject","Viewer","content","viewerRender","ExportToolbar_ExportToolbar","ALIGN","NoteNode","rest","objectWithoutProperties","Note","NoteNode_templateObject","DataToolbar","editorJson","setEditorJson","importHtml","setImportHtml","DataToolbarWrapper","Header","Value","fromJSON","parse","PasteArea","rows","valueJson","console","log","html","replace","DataToolbar_templateObject","DataToolbar_templateObject2","DataToolbar_templateObject3","SubMark","Sub","sub","SubSupMark_templateObject","SupMark","Sup","sup","SubSupMark_templateObject2","existingValue","localStorage","getItem","schema","last","normalize","_ref","child","paragraph","Block","create","insertNodeByKey","blocks","isVoid","hr","plugins","SoftBreak","shift","DeepTable","commands","wrapBlock","unwrapBlock","queries","some","isParagraph","endText","text","renderNode","onKeyDown","event","keyCode","align","style","textAlign","NoteNode_NoteNode","getData","reduce","prev","objectSpread","toJS","isCode","isCodeBlock","onPaste","getEventTransfer","CodeNode_CodeNode","NonExecutableCodeNode_NonExecutableCodeNode","SampleOutput_SampleOutput","PreNode_PreNode","wrapInline","moveToEnd","unwrapInline","inlines","inline","transfer","insertFragment","Nirmaan","initialValue","leaves","state","_this","_ref2","json","window","setItem","setState","renderMark","mark","BoldMark_BoldMark","ItalicMark_ItalicMark","CodeMark_CodeMark","CodeMark_SampMark","CodeMark_VarMark","SubSupMark_SubMark","SubSupMark_SupMark","ctrlKey","isFocused","ImageNode_ImageNode","renderEditor","wordCount","getBlocks","memo","b","trim","split","WordCounter","_this2","this","ToolbarLayout","FormatToolBar_FormatToolbar","DataToolbar_DataToolbar","Layout","BlocksToolbar_BlocksToolbar","slate_react_es","ref","src_Viewer","Component","Nirmaan_templateObject","Nirmaan_templateObject2","Nirmaan_templateObject3","App","src_Nirmaan","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dac401be.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const BoldMark = props => {\n  const { children, attributes } = props;\n  return <strong {...{ attributes }}>{children}</strong>;\n};\n","export const fontFamilies = {\n  MONOSPACE: \"Menlo, Consolas, Courier New\"\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const CodeMark = props => {\n  const { children, attributes } = props;\n  return <InlineCode {...{ attributes }}>{children}</InlineCode>;\n};\n\nconst InlineCode = styled.code`\n  background: #eee;\n\n  &:after {\n    content: \"<code>\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 5px;\n    margin-left: 2px;\n  }\n`;\n\nexport const SampMark = props => {\n  const { children, attributes } = props;\n  return <Samp {...{ attributes }}>{children}</Samp>;\n};\n\nconst Samp = styled.samp`\n  background: #eee;\n\n  &:after {\n    content: \"<samp>\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 5px;\n    margin-left: 2px;\n  }\n`;\n\nexport const VarMark = props => {\n  const { children, attributes } = props;\n  return <Var {...{ attributes }}>{children}</Var>;\n};\n\nconst Var = styled.samp`\n  background: #eee;\n\n  &:after {\n    content: \"<var>\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 5px;\n    margin-left: 2px;\n  }\n`;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\nimport Popup from \"reactjs-popup\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const CodeNode = props => {\n  const output = props.node.data.get(\"output\") ? (\n    <CodeOutput>\n      <strong>Output:</strong>\n      <br />\n      {props.node.data.get(\"output\")}\n    </CodeOutput>\n  ) : null;\n\n  return (\n    <div {...props.attributes}>\n      <Pre>\n        <Code>{props.children}</Code>\n      </Pre>\n      {output}\n    </div>\n  );\n};\n\nconst Code = styled.code``;\n\nconst CodeOutput = styled.pre`\n  background: #eee;\n  font-family: ${fontFamilies.MONOSPACE};\n  padding: 10px;\n`;\n\nconst Pre = styled.pre`\n  background: #eee;\n  position: relative;\n  z-index: -10;\n\n  &:after {\n    content: \"Executable Code\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const NonExecutableCodeNode = props => {\n  return (\n    <Pre {...props.attributes}>\n      <Code>{props.children}</Code>\n    </Pre>\n  );\n};\n\nconst Code = styled.code``;\n\nconst Pre = styled.pre`\n  background: #eee;\n  position: relative;\n\n  &:after {\n    content: \"Non Executable Code\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const SampleOutput = props => {\n  return (\n    <Pre {...props.attributes}>\n      <Samp>{props.children}</Samp>\n    </Pre>\n  );\n};\n\nconst Samp = styled.samp``;\n\nconst Pre = styled.pre`\n  background: #eee;\n  position: relative;\n\n  &:after {\n    content: \"Sample Output\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const PreNode = props => {\n  return <Pre {...props.attributes}>{props.children}</Pre>;\n};\n\nconst Pre = styled.pre`\n  background: #eee;\n  position: relative;\n\n  &:after {\n    content: \"preformatted\";\n    font-family: ${fontFamilies.MONOSPACE};\n    font-size: 10px;\n    position: absolute;\n    top: 2px;\n    right: 2px;\n  }\n`;\n","export const MarkHotKey = options => {\n  const { type, key } = options;\n\n  return {\n    onKeyDown: (event, editor, next) => {\n      if (!event.ctrlKey || event.key !== key) return next();\n      event.preventDefault();\n      editor.toggleMark(type);\n    }\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MarkHotKey } from \"../marks/HotKeys\";\nimport { CodeNode } from \"../nodes/CodeNode\";\nimport { NonExecutableCodeNode } from \"../nodes/NonExecutableCodeNode\";\nimport { SampleOutput } from \"../nodes/SampleOutput\";\nimport { getEventTransfer } from \"slate-react\";\nimport { PreNode } from \"../nodes/PreNode\";\n\nexport const codeMarkPlugin = MarkHotKey({\n  type: \"code\",\n  key: \"`\"\n});\n\nexport const isCodeBlock = block => {\n  return (\n    block.type === \"code\" ||\n    block.type === \"nonexecutable-code\" ||\n    block.type === \"sample-output\"\n  );\n};\n\nexport const codeNodePlugin = options => {\n  return {\n    queries: {\n      isCode: editor => {\n        return editor.value.blocks.some(block => isCodeBlock(block));\n      }\n    },\n    onPaste: (event, editor, next) => {\n      const { text } = getEventTransfer(event);\n      const isCode = editor.isCode();\n\n      if (!isCode) {\n        return next();\n      }\n\n      editor.insertText(text.replace(/\\r\\n/g, \"\\n\").replace(/\\r/g, \"\"));\n    },\n    renderNode: (props, editor, next) => {\n      switch (props.node.type) {\n        case \"code\":\n          return <CodeNode {...props} />;\n        case \"nonexecutable-code\":\n          return <NonExecutableCodeNode {...props} />;\n        case \"sample-output\":\n          return <SampleOutput {...props} />;\n        case \"pre\":\n          return <PreNode {...props} />;\n        default:\n          return next();\n      }\n    }\n  };\n};\n","export const palette = {\n  GREY_BORDER_LIGHT: \"#eee\",\n  TEAL: \"#008080\",\n  WHITE: \"#F0F0F0\"\n};\n","import styled from \"styled-components\";\nimport { palette } from \"../styles/palette\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const Button = styled.button`\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const BlockButton = styled(Button)`\n  border: 1px solid #ccc;\n  padding: 10px;\n  margin: 5px;\n  cursor: pointer;\n  outline: none;\n  font-size: 16px;\n  color: #777;\n`;\n\nexport const InlineButton = styled(Button)`\n  font-size: 13px;\n`;\n\nexport const PrimaryButton = styled.button`\n  background: ${palette.TEAL};\n  color: ${palette.WHITE};\n  height: 30px;\n  margin: 0 10px;\n  font-size: 16px;\n  font-family: ${fontFamilies.MONOSPACE};\n`;\n","import { palette } from \"../styles/palette\";\nimport styled from \"styled-components\";\nimport { fontFamilies } from \"../styles/fonts\";\n\nexport const Input = styled.input`\n  border: 1px solid ${palette.GREY_BORDER_LIGHT};\n  height: 29px;\n  padding: 0 10px;\n  font-family: ${fontFamilies.MONOSPACE};\n  outline: none;\n  width: 500px;\n  font-size: 18px;\n`;\n\nexport const Textarea = styled.textarea`\n  border: 1px solid ${palette.GREY_BORDER_LIGHT};\n  height: 300px;\n  padding: 0 10px;\n  font-family: ${fontFamilies.MONOSPACE};\n  outline: none;\n  width: 500px;\n  font-size: 18px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  font-weight: bold;\n  margin-top: 20px;\n`;\n\nexport const InlineForm = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n`;\n","import styled from \"styled-components\";\n\nexport const PopupWrapper = styled.div`\n  width: 50%;\n  padding: 30px 50px;\n  z-index: 100000000;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBold,\n  faItalic,\n  faCode,\n  faAlignCenter,\n  faAlignLeft,\n  faAlignRight,\n  faLink,\n  faUnlink\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { InlineButton, PrimaryButton } from \"../components/Buttons\";\nimport { Input, InlineForm, Textarea, Label } from \"../components/FormElements\";\nimport Popup from \"reactjs-popup\";\nimport { PopupWrapper } from \"./Popup\";\n\nexport const FormatToolbar = props => {\n  const { editor, onChange } = props;\n  return (\n    <FormatToolbarWrapper>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faBold}\n          onClick={() => {\n            editor.toggleMark(\"bold\");\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faItalic}\n          onClick={() => {\n            editor.toggleMark(\"italic\");\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faCode}\n          onClick={() => {\n            editor.toggleMark(\"code\");\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <div\n          onClick={() => {\n            editor.toggleMark(\"samp\");\n            editor.focus();\n          }}\n        >\n          samp\n        </div>\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <div\n          onClick={() => {\n            editor.toggleMark(\"var\");\n            editor.focus();\n          }}\n        >\n          var\n        </div>\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faAlignLeft}\n          onClick={() => {\n            editor.alignLeft();\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faAlignCenter}\n          onClick={() => {\n            editor.alignCenter();\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <FontAwesomeIcon\n          icon={faAlignRight}\n          onClick={() => {\n            editor.alignRight();\n            editor.focus();\n          }}\n        />\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <div\n          onClick={() => {\n            editor.toggleMark(\"sup\");\n            editor.focus();\n          }}\n        >\n          sup\n        </div>\n      </InlineButton>\n      <InlineButton className=\"tooltip-icon-button\">\n        <div\n          onClick={() => {\n            editor.toggleMark(\"sub\");\n            editor.focus();\n          }}\n        >\n          sub\n        </div>\n      </InlineButton>\n      {editor &&\n        (editor.hasLinks() ? (\n          <InlineButton className=\"tooltip-icon-button\">\n            <FontAwesomeIcon\n              icon={faUnlink}\n              onClick={() => {\n                editor.unwrapLink();\n              }}\n            />\n          </InlineButton>\n        ) : (\n          <Popup\n            modal\n            trigger={\n              <InlineButton className=\"tooltip-icon-button\">\n                <FontAwesomeIcon icon={faLink} />\n              </InlineButton>\n            }\n          >\n            {close => <InsertLinkPopup {...props} closePopup={close} />}\n          </Popup>\n        ))}\n    </FormatToolbarWrapper>\n  );\n};\n\nconst InsertLinkPopup = props => {\n  const { editor, closePopup, onChange } = props;\n  const [linkUrl, setLinkUrl] = useState(\"\");\n  const [linkText, setLinkText] = useState(\"\");\n\n  const isCollapsed = editor.value.selection.isCollapsed;\n\n  return (\n    <PopupWrapper>\n      {isCollapsed && (\n        <>\n          <Label>Text</Label>\n          <Input\n            type=\"text\"\n            value={linkText}\n            onChange={e => setLinkText(e.target.value)}\n          />\n        </>\n      )}\n      <Label>Link</Label>\n      <Input\n        type=\"text\"\n        value={linkUrl}\n        onChange={e => setLinkUrl(e.target.value)}\n      />\n      <PrimaryButton\n        onClick={e => {\n          e.preventDefault();\n          const href = linkUrl;\n\n          if (isCollapsed) {\n            editor\n              .insertText(linkText)\n              .moveFocusBackward(linkText.length)\n              .wrapLink(href)\n              .focus();\n          } else {\n            editor.wrapLink(href);\n          }\n          closePopup();\n        }}\n      >\n        Insert\n      </PrimaryButton>\n    </PopupWrapper>\n  );\n};\n\nconst FormatToolbarWrapper = styled.div`\n  display: flex;\n  border-bottom: solid 1.7px rgba(199, 198, 255, 0.15);\n  padding: 10px 0;\n  background: white;\n`;\n","import React from \"react\";\n\nexport const ItalicMark = props => {\n  const { children, attributes } = props;\n  return <em {...{ attributes }}>{children}</em>;\n};\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHeading,\n  faCode,\n  faImage,\n  faParagraph,\n  faTable,\n  faListUl,\n  faListOl,\n  faCircle,\n  faChevronCircleRight,\n  faStickyNote,\n  faDatabase\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { BlockButton, PrimaryButton } from \"../components/Buttons\";\nimport styled from \"styled-components\";\nimport Popup from \"reactjs-popup\";\nimport { Input, InlineForm, Textarea, Label } from \"../components/FormElements\";\nimport { PopupWrapper } from \"./Popup\";\n\nexport const BlocksToolbar = props => {\n  const { editor, onChange } = props;\n\n  return (\n    <BlocksToolbarWrapper>\n      <BlockButton\n        onClick={() => {\n          if (editor.isList() && !editor.isBlockEmpty()) {\n            editor.insertBlock(\"paragraph\").unwrapList();\n          } else {\n            editor.setBlocks(\"paragraph\").unwrapList();\n          }\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faParagraph} />\n      </BlockButton>\n      <BlockButton\n        onClick={e => {\n          e.preventDefault();\n          editor.insertBlock(\"hr\");\n        }}\n      >\n        __\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          if (editor.isBlockEmpty()) {\n            editor.setBlocks(\"code\");\n          } else {\n            editor.insertBlock(\"code\").unwrapList();\n          }\n\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faCode} />\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          if (editor.isBlockEmpty()) {\n            editor.setBlocks(\"nonexecutable-code\");\n          } else {\n            editor.insertBlock(\"nonexecutable-code\").unwrapList();\n          }\n\n          editor.focus();\n        }}\n      >\n        <span className=\"fa-layers fa-fw\">\n          <FontAwesomeIcon icon={faCircle} size=\"lg\" />\n          <FontAwesomeIcon icon={faCode} size=\"xs\" inverse />\n        </span>\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          if (editor.isBlockEmpty()) {\n            editor.setBlocks(\"sample-output\");\n          } else {\n            editor.insertBlock(\"sample-output\").unwrapList();\n          }\n\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faChevronCircleRight} />\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"heading-1\");\n          !editor.isBlockEmpty() &&\n            editor\n              .moveToEndOfBlock()\n              .insertBlock(\"paragraph\")\n              .unwrapList();\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faHeading} />\n      </BlockButton>\n      <BlockButton\n        onClick={() => {\n          editor.setBlocks(\"heading-2\");\n          !editor.isBlockEmpty() &&\n            editor\n              .moveToEndOfBlock()\n              .insertBlock(\"paragraph\")\n              .unwrapList();\n          editor.focus();\n        }}\n      >\n        <FontAwesomeIcon icon={faHeading} size=\"sm\" />\n      </BlockButton>\n      <Popup\n        modal\n        trigger={\n          <BlockButton className=\"tooltip-icon-button\">\n            <FontAwesomeIcon icon={faImage} />\n          </BlockButton>\n        }\n      >\n        {close => <InsertImagePopup {...props} closePopup={close} />}\n      </Popup>\n\n      <BlockButton\n        onClick={e => {\n          e.preventDefault();\n          if (!editor.isList()) {\n            onChange(editor.insertUnorderedList());\n          } else {\n            onChange(editor.unwrapList());\n          }\n        }}\n      >\n        <FontAwesomeIcon icon={faListUl} />\n      </BlockButton>\n      <BlockButton>\n        <FontAwesomeIcon\n          icon={faListOl}\n          onClick={e => {\n            e.preventDefault();\n            if (!editor.isList()) {\n              onChange(editor.insertOrderedList());\n            } else {\n              onChange(editor.unwrapList());\n            }\n          }}\n        />\n      </BlockButton>\n      <BlockButton>\n        <div\n          onClick={e => {\n            e.preventDefault();\n            onChange(editor.insertBlock(\"pre\"));\n          }}\n        >\n          pre\n        </div>\n      </BlockButton>\n      <BlockButton>\n        <FontAwesomeIcon\n          icon={faStickyNote}\n          onClick={e => {\n            e.preventDefault();\n            onChange(editor.insertNote());\n          }}\n        />\n      </BlockButton>\n      <Popup\n        trigger={\n          <BlockButton>\n            <FontAwesomeIcon\n              icon={faDatabase}\n              onClick={e => {\n                e.preventDefault();\n              }}\n            />\n          </BlockButton>\n        }\n        modal\n      >\n        {close => <InsertMetadataPopup {...props} closePopup={close} />}\n      </Popup>\n\n      <BlockButton>\n        <FontAwesomeIcon\n          icon={faTable}\n          onClick={e => {\n            e.preventDefault();\n            onChange(editor.insertTable().unwrapList());\n          }}\n        />\n      </BlockButton>\n      {editor && editor.isSelectionInTable() && (\n        <>\n          <button onClick={() => onChange(editor.removeTable())}>\n            Delete Table\n          </button>\n          <button onClick={() => onChange(editor.insertRow())}>\n            Insert Row\n          </button>\n          <button onClick={() => onChange(editor.removeRow())}>\n            Delete Row\n          </button>\n          <button onClick={() => onChange(editor.insertColumn())}>\n            Insert Column\n          </button>\n          <button onClick={() => onChange(editor.removeColumn())}>\n            Delete Column\n          </button>\n          <button onClick={() => onChange(editor.toggleTableHeaders())}>\n            Toggle header\n          </button>\n        </>\n      )}\n    </BlocksToolbarWrapper>\n  );\n};\n\nconst BlocksToolbarWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: fixed;\n  left: 0;\n  top: 10%;\n`;\n\nconst InsertImagePopup = props => {\n  const { editor, closePopup } = props;\n  const [imageUrl, setImageUrl] = useState(\"https://placekitten.com/200/300\");\n\n  return (\n    <PopupWrapper>\n      <InlineForm>\n        <Input\n          type=\"text\"\n          value={imageUrl}\n          onChange={e => setImageUrl(e.target.value)}\n        />\n        <PrimaryButton\n          onClick={e => {\n            e.preventDefault();\n            const image = {\n              type: \"image\",\n              data: {\n                src: imageUrl\n              }\n            };\n            editor.isBlockEmpty()\n              ? editor.setBlocks(image)\n              : editor.insertBlock(image);\n            editor.insertBlock(\"paragraph\");\n            editor.focus();\n            closePopup();\n          }}\n        >\n          Insert\n        </PrimaryButton>\n      </InlineForm>\n    </PopupWrapper>\n  );\n};\n\nconst InsertMetadataPopup = props => {\n  const { editor, closePopup } = props;\n\n  const block = editor.value.startBlock;\n\n  const [metaKey, setMetaKey] = useState(block.data.keySeq().first() || \"\");\n  const [metaValue, setMetaValue] = useState(block.data.first() || \"\");\n\n  return (\n    <PopupWrapper>\n      <h2>Add metadata</h2>\n\n      <Label>Key</Label>\n      <Input\n        type=\"text\"\n        defaultValue={metaKey}\n        onChange={e => setMetaKey(e.target.value)}\n      />\n      <Label>Value</Label>\n      <Textarea\n        defaultValue={metaValue}\n        onChange={e => setMetaValue(e.target.value)}\n      />\n      <PrimaryButton\n        onClick={e => {\n          e.preventDefault();\n          if (metaKey !== \"\" && metaValue !== \"\") {\n            editor.setNodeByKey(block.key, { data: { [metaKey]: metaValue } });\n          }\n          editor.focus();\n          closePopup();\n        }}\n      >\n        Add metadata\n      </PrimaryButton>\n    </PopupWrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Image = styled(\"img\")`\n  display: block;\n  max-width: 100%;\n  box-shadow: ${props => (props.selected ? \"0 0 0 2px blue;\" : \"none\")};\n`;\n","import React from \"react\";\nimport { Image } from \"../components/Image\";\n\nexport const ImageNode = props => {\n  const { attributes } = props;\n  return <Image {...attributes} src={props.src} />;\n};\n","import React from \"react\";\nimport Html from \"slate-html-serializer\";\n\nconst rules = [\n  {\n    serialize: (obj, children) => {\n      if (obj.object === \"block\") {\n        switch (obj.type) {\n          case \"code\":\n            return (\n              <pre>\n                <code className=\"exec\">{children}</code>\n              </pre>\n            );\n          case \"nonexecutable-code\":\n            return (\n              <pre>\n                <code>{children}</code>\n              </pre>\n            );\n          case \"sample-output\":\n            return (\n              <pre>\n                <samp>{children}</samp>\n              </pre>\n            );\n          case \"image\":\n            return <img alt=\"\" src={obj.data.get(\"src\")} />;\n          case \"paragraph\":\n            return <p>{children}</p>;\n          case \"heading-1\":\n            return <h1>{children}</h1>;\n          case \"heading-2\":\n            return <h2>{children}</h2>;\n          case \"heading-3\":\n            return <h3>{children}</h3>;\n          case \"ul-list\":\n            return <ul>{children}</ul>;\n          case \"ol-list\":\n            return <ol>{children}</ol>;\n          case \"list-item\":\n            return <li>{children}</li>;\n          case \"table\":\n            return <table>{children}</table>;\n          case \"table_row\":\n            return <tr>{children}</tr>;\n          case \"table_cell\":\n            return <td>{children}</td>;\n          case \"pre\":\n            return <pre>{children}</pre>;\n          case \"hr\":\n            return <hr />;\n          default:\n            return <p>{children}</p>;\n        }\n      }\n    },\n    deserialize: (el, next) => {\n      const tag = el.tagName.toLowerCase();\n\n      if (tag === \"p\") {\n        return {\n          object: \"block\",\n          type: \"paragraph\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"h1\") {\n        return {\n          object: \"block\",\n          type: \"heading-1\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"h2\") {\n        return {\n          object: \"block\",\n          type: \"heading-2\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"h3\") {\n        return {\n          object: \"block\",\n          type: \"heading-3\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"ul\") {\n        return {\n          object: \"block\",\n          type: \"ul-list\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"ol\") {\n        return {\n          object: \"block\",\n          type: \"ol-list\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"li\") {\n        return {\n          object: \"block\",\n          type: \"list-item\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"table\") {\n        return {\n          object: \"block\",\n          type: \"table\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"tr\") {\n        return {\n          object: \"block\",\n          type: \"table_row\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"td\") {\n        return {\n          object: \"block\",\n          type: \"table_cell\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"hr\") {\n        return {\n          object: \"block\",\n          type: \"hr\"\n        };\n      }\n      if (tag === \"pre\") {\n        const childOfPre = el.childNodes[0];\n        if (\n          childOfPre &&\n          childOfPre.tagName &&\n          childOfPre.tagName.toLowerCase() === \"code\" &&\n          childOfPre.classList.contains(\"exec\")\n        ) {\n          return {\n            object: \"block\",\n            type: \"code\",\n            nodes: next(childOfPre.childNodes)\n          };\n        }\n\n        if (\n          childOfPre &&\n          childOfPre.tagName &&\n          childOfPre.tagName.toLowerCase() === \"code\" &&\n          !childOfPre.classList.contains(\"exec\")\n        ) {\n          return {\n            object: \"block\",\n            type: \"nonexecutable-code\",\n            nodes: next(childOfPre.childNodes)\n          };\n        }\n\n        if (\n          childOfPre &&\n          childOfPre.tagName &&\n          childOfPre.tagName.toLowerCase() === \"samp\"\n        ) {\n          return {\n            object: \"block\",\n            type: \"sample-output\",\n            nodes: next(childOfPre.childNodes)\n          };\n        }\n        return {\n          object: \"block\",\n          type: \"pre\",\n          nodes: next(el.childNodes)\n        };\n      }\n\n      if (tag === \"img\") {\n        return {\n          object: \"block\",\n          type: \"image\",\n          nodes: next(el.childNodes),\n          data: {\n            src: el.getAttribute(\"src\")\n          }\n        };\n      }\n    }\n  },\n  {\n    serialize: (obj, children) => {\n      if (obj.object === \"mark\") {\n        switch (obj.type) {\n          case \"bold\":\n            return <strong>{children}</strong>;\n          case \"italic\":\n            return <em>{children}</em>;\n          case \"code\":\n            return <code>{children}</code>;\n          case \"var\":\n            return <var>{children}</var>;\n          case \"samp\":\n            return <samp>{children}</samp>;\n          case \"sup\":\n            return <sup>{children}</sup>;\n          case \"sub\":\n            return <sub>{children}</sub>;\n          default:\n            return;\n        }\n      }\n    },\n    deserialize: (el, next) => {\n      const tag = el.tagName.toLowerCase();\n      if (tag === \"strong\") {\n        return {\n          object: \"mark\",\n          type: \"bold\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"em\") {\n        return {\n          object: \"mark\",\n          type: \"italic\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"var\") {\n        return {\n          object: \"mark\",\n          type: \"var\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"sub\") {\n        return {\n          object: \"mark\",\n          type: \"sub\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"sup\") {\n        return {\n          object: \"mark\",\n          type: \"sup\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"code\" && el.parentNode.tagName.toLowerCase() !== \"pre\") {\n        return {\n          object: \"mark\",\n          type: \"code\",\n          nodes: next(el.childNodes)\n        };\n      }\n      if (tag === \"samp\" && el.parentNode.tagName.toLowerCase() !== \"pre\") {\n        return {\n          object: \"mark\",\n          type: \"samp\",\n          nodes: next(el.childNodes)\n        };\n      }\n    }\n  },\n  {\n    serialize: (obj, children) => {\n      if (obj.object === \"inline\") {\n        switch (obj.type) {\n          case \"link\":\n            return <a href={obj.data.get(\"href\")}>{children}</a>;\n          default:\n            return;\n        }\n      }\n    },\n    // Special case for links, to grab their href.\n    deserialize: (el, next) => {\n      if (el.tagName.toLowerCase() === \"a\") {\n        return {\n          object: \"inline\",\n          type: \"link\",\n          nodes: next(el.childNodes),\n          data: {\n            href: el.getAttribute(\"href\")\n          }\n        };\n      }\n    }\n  }\n];\n\n// Create a new serializer instance with our `rules` from above.\nconst htmlSerializer = new Html({ rules });\n\nexport default htmlSerializer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { InlineButton } from \"../components/Buttons\";\nimport { viewerContent } from \"../Viewer\";\n\nconst copyToClipboard = string => {\n  const el = document.createElement(\"textarea\");\n  el.value = string;\n  document.body.appendChild(el);\n  el.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(el);\n};\n\nexport const ExportToolbar = props => {\n  const { editor, setViewMode, viewMode } = props;\n  return (\n    <ExportToolbarWrapper>\n      <InlineButton onClick={() => setViewMode(\"OUTPUT\")}>Output</InlineButton>\n      <InlineButton onClick={() => setViewMode(\"HTML\")}>HTML</InlineButton>\n      <InlineButton\n        onClick={() => {\n          setViewMode(\"JSON\");\n        }}\n      >\n        JSON\n      </InlineButton>\n      <InlineButton\n        onClick={() => {\n          const content = viewerContent(editor, viewMode);\n          copyToClipboard(content);\n          alert(`Copied ${viewMode} to clipboard!`);\n        }}\n      >\n        Copy to Clipboard\n      </InlineButton>\n    </ExportToolbarWrapper>\n  );\n};\n\nconst ExportToolbarWrapper = styled.div`\n  top: 0;\n  right: 0;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport htmlSerializer from \"./serializers/HtmlSerializer\";\nimport pretty from \"pretty\";\nimport { ExportToolbar } from \"./toolbars/ExportToolbar\";\n\nexport const viewerContent = (editor, viewMode) => {\n  if (!editor) {\n    return \"\";\n  }\n\n  if (viewMode === \"HTML\") {\n    return pretty(htmlSerializer.serialize(editor.value));\n  } else if (viewMode === \"OUTPUT\") {\n    return (\n      <div\n        dangerouslySetInnerHTML={{\n          __html: htmlSerializer.serialize(editor.value)\n        }}\n      />\n    );\n  } else {\n    return JSON.stringify(editor.value.toJSON(), null, 4);\n  }\n};\n\nexport const viewerRender = (editor, viewMode) => {\n  if (viewMode == \"OUTPUT\") {\n    return viewerContent(editor, viewMode);\n  } else {\n    return <pre>{viewerContent(editor, viewMode)}</pre>;\n  }\n};\n\nconst Viewer = props => {\n  const { editor } = props;\n\n  const [viewMode, setViewMode] = useState(\"OUTPUT\");\n  let content = viewerRender(editor, viewMode);\n\n  return (\n    <ViewerWrapper>\n      <ExportToolbar\n        editor={editor}\n        viewMode={viewMode}\n        setViewMode={setViewMode}\n      />\n      {content}\n    </ViewerWrapper>\n  );\n};\n\nconst ViewerWrapper = styled.div`\n  padding: 10px;\n  max-width: 100%;\n  overflow-x: auto;\n`;\n\nexport default Viewer;\n","export const ALIGN = {\n  LEFT: \"left\",\n  CENTER: \"center\",\n  RIGHT: \"right\"\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const NoteNode = props => {\n  const { attributes, children, ...rest } = props;\n  return (\n    <Note {...attributes} {...rest}>\n      {children}\n    </Note>\n  );\n};\n\nconst Note = styled.div`\n  padding: 20px;\n  border: 1px solid #777;\n`;\n","import React, { useState } from \"react\";\nimport { Value } from \"slate\";\nimport styled from \"styled-components\";\nimport Popup from \"reactjs-popup\";\nimport { fontFamilies } from \"../styles/fonts\";\nimport { PrimaryButton } from \"../components/Buttons\";\nimport htmlSerializer from \"../serializers/HtmlSerializer\";\n\nexport const DataToolbar = props => {\n  const { editor, onChange } = props;\n  const [editorJson, setEditorJson] = useState({});\n  const [importHtml, setImportHtml] = useState(\"<p></p>\");\n  return (\n    <DataToolbarWrapper>\n      <Popup modal trigger={<button>Import JSON</button>}>\n        {close => {\n          return (\n            <>\n              <Header>\n                <h3>Paste JSON here</h3>\n                <PrimaryButton\n                  onClick={() => {\n                    onChange({\n                      value: Value.fromJSON(JSON.parse(editorJson))\n                    });\n                    close();\n                  }}\n                >\n                  Import\n                </PrimaryButton>\n              </Header>\n\n              <PasteArea\n                rows={20}\n                onChange={e => setEditorJson(e.target.value)}\n              />\n            </>\n          );\n        }}\n      </Popup>\n      <Popup modal trigger={<button>Import HTML</button>}>\n        {close => {\n          return (\n            <>\n              <Header>\n                <h3>Paste HTML here</h3>\n\n                <PrimaryButton\n                  onClick={() => {\n                    const value = htmlSerializer.deserialize(importHtml);\n                    const valueJson = htmlSerializer.deserialize(importHtml, {\n                      toJSON: true\n                    });\n                    console.log(\"The value is \", valueJson);\n                    onChange({\n                      value: htmlSerializer.deserialize(importHtml)\n                    });\n                    close();\n                  }}\n                >\n                  Import\n                </PrimaryButton>\n              </Header>\n\n              <PasteArea\n                rows={20}\n                onChange={e => {\n                  const html = e.target.value.replace(/>\\s+</g, \"><\");\n\n                  setImportHtml(html);\n                }}\n              />\n            </>\n          );\n        }}\n      </Popup>\n    </DataToolbarWrapper>\n  );\n};\n\nconst DataToolbarWrapper = styled.div`\n  justify-self: end;\n`;\n\nconst PasteArea = styled.textarea`\n  font-family: ${fontFamilies.MONOSPACE};\n  outline: none;\n  width: calc(100% - 50px);\n  margin: 0 auto;\n  display: block;\n`;\n\nconst Header = styled.div`\n  display: grid;\n  grid-template-columns: auto auto;\n  align-items: center;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const SubMark = props => {\n  const { children, attributes } = props;\n  return <Sub {...{ attributes }}>{children}</Sub>;\n};\n\nconst Sub = styled.sub``;\n\nexport const SupMark = props => {\n  const { children, attributes } = props;\n  return <Sup {...{ attributes }}>{children}</Sup>;\n};\n\nconst Sup = styled.sup``;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Editor } from \"slate-react\";\nimport { Value, Block } from \"slate\";\nimport { BoldMark } from \"./marks/BoldMark\";\nimport { CodeMark, SampMark, VarMark } from \"./marks/CodeMark\";\nimport { codeNodePlugin } from \"./plugins/codePlugin\";\nimport { FormatToolbar } from \"./toolbars/FormatToolBar\";\nimport { ItalicMark } from \"./marks/ItalicMark\";\nimport { BlocksToolbar } from \"./toolbars/BlocksToolbar\";\nimport { ImageNode } from \"./nodes/ImageNode\";\nimport SoftBreak from \"slate-soft-break\";\nimport DeepTable from \"slate-deep-table\";\nimport { listPlugin } from \"./plugins/listPlugin\";\nimport Viewer from \"./Viewer\";\nimport styled from \"styled-components\";\nimport { alignPlugin } from \"./plugins/alignPlugin\";\nimport { notePlugin } from \"./plugins/notePlugin\";\nimport { DataToolbar } from \"./toolbars/DataToolbar\";\nimport { linkPlugin } from \"./plugins/linkPlugin\";\nimport { pasteHtmlPlugin } from \"./plugins/pasteHtmlPlugin\";\nimport { SubMark, SupMark } from \"./marks/SubSupMark\";\n\nconst existingValue = JSON.parse(localStorage.getItem(\"content\"));\n\nconst schema = {\n  // This section is need for the image upload functionality, if this is not there, then we cannot add anything after an image.\n  document: {\n    last: { type: \"paragraph\" },\n    normalize: (editor, { code, node, child }) => {\n      switch (code) {\n        case \"last_child_type_invalid\": {\n          const paragraph = Block.create(\"paragraph\");\n          return editor.insertNodeByKey(node.key, node.nodes.size, paragraph);\n        }\n      }\n    }\n  },\n  blocks: {\n    image: {\n      isVoid: true\n    },\n    hr: {\n      isVoid: true\n    }\n  }\n};\n\nconst plugins = [\n  SoftBreak({\n    shift: true\n  }),\n  DeepTable(),\n  listPlugin(),\n  notePlugin(),\n  alignPlugin(),\n  codeNodePlugin(),\n  linkPlugin(),\n  pasteHtmlPlugin()\n];\n\nclass Nirmaan extends Component {\n  // Set the initial value when the app is first constructed.\n\n  initialValue = Value.fromJSON(\n    existingValue || {\n      document: {\n        nodes: [\n          {\n            object: \"block\",\n            type: \"paragraph\",\n            nodes: [\n              {\n                object: \"text\",\n                leaves: [\n                  {\n                    text: \"A line of text in a paragraph.\"\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    }\n  );\n\n  state = {\n    value: this.initialValue || this.props.defaultValue\n  };\n\n  // On change, update the app's React state with the new editor value.\n  onChange = ({ value }) => {\n    const json = value.toJSON();\n    window.content = json;\n\n    const content = JSON.stringify(json);\n    localStorage.setItem(\"content\", content);\n\n    this.setState({ value });\n    this.props.onChange && this.props.onChange(json);\n  };\n\n  renderMark = (props, editor, next) => {\n    switch (props.mark.type) {\n      case \"bold\":\n        return <BoldMark {...props} {...props.attributes} />;\n      case \"italic\":\n        return <ItalicMark {...props} {...props.attributes} />;\n      case \"code\":\n        return <CodeMark {...props} {...props.attributes} />;\n      case \"samp\":\n        return <SampMark {...props} {...props.attributes} />;\n      case \"var\":\n        return <VarMark {...props} {...props.attributes} />;\n      case \"sub\":\n        return <SubMark {...props} {...props.attributes} />;\n      case \"sup\":\n        return <SupMark {...props} {...props.attributes} />;\n      default:\n        return next();\n    }\n  };\n\n  onKeyDown = (event, editor, next) => {\n    if (!event.ctrlKey) return next();\n\n    switch (event.key) {\n      case \"`\":\n        event.preventDefault();\n        editor.toggleMark(\"code\");\n        break;\n      case \"q\":\n        event.preventDefault();\n        editor.toggleMark(\"code\");\n        break;\n      case \"b\":\n        event.preventDefault();\n        editor.toggleMark(\"bold\");\n        break;\n      case \"i\":\n        event.preventDefault();\n        editor.toggleMark(\"italic\");\n        break;\n      default:\n        return next();\n    }\n  };\n\n  renderNode = (props, editor, next) => {\n    const { attributes, node, children, isFocused } = props;\n    const align = node.data.get(\"align\");\n    const style = align\n      ? {\n          textAlign: align\n        }\n      : {};\n\n    switch (node.type) {\n      case \"image\":\n        const src = node.data.get(\"src\");\n        console.log(\"Image source is \", src);\n        return <ImageNode src={src} selected={isFocused} {...attributes} />;\n      case \"heading-1\":\n        return (\n          <h1 {...attributes} style={style}>\n            {children}\n          </h1>\n        );\n      case \"heading-2\":\n        return (\n          <h2 {...attributes} style={style}>\n            {children}\n          </h2>\n        );\n      case \"paragraph\":\n        return (\n          <p {...attributes} style={style}>\n            {children}\n          </p>\n        );\n      case \"hr\":\n        return <hr {...attributes} />;\n      default:\n        return next();\n    }\n  };\n\n  renderEditor = (props, editor, next) => {\n    const children = next();\n    const wordCount = props.value.document\n      .getBlocks()\n      .reduce((memo, b) => memo + b.text.trim().split(/\\s+/).length, 0);\n    return (\n      <div>\n        <div>{children}</div>\n        <WordCounter>Word Count: {wordCount}</WordCounter>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <>\n        <ToolbarLayout>\n          <FormatToolbar editor={this.editor} onChange={this.onChange} />\n          <DataToolbar editor={this.editor} onChange={this.onChange} />\n        </ToolbarLayout>\n\n        <Layout>\n          <BlocksToolbar editor={this.editor} onChange={this.onChange} />\n          <Editor\n            plugins={plugins}\n            value={this.state.value}\n            onChange={this.onChange}\n            onKeyDown={this.onKeyDown}\n            renderMark={this.renderMark}\n            renderNode={this.renderNode}\n            renderEditor={this.renderEditor}\n            schema={schema}\n            ref={editor => (this.editor = editor)}\n          />\n          <Viewer editor={this.editor} />\n        </Layout>\n      </>\n    );\n  }\n}\n\nconst ToolbarLayout = styled.div`\n  width: 100%;\n  max-width: 1000px;\n  position: fixed;\n  display: grid;\n  top: 0;\n  grid-template-columns: auto auto;\n  grid-column-gap: 50px;\n  background: white;\n`;\n\nconst Layout = styled.div`\n  margin-top: 50px;\n  display: grid;\n\n  grid-column-gap: 50px;\n\n  @media (min-width: 720px) {\n    grid-template-columns: 50% 50%;\n  }\n`;\n\nconst WordCounter = styled(\"span\")`\n  margin-top: 10px;\n  padding: 12px;\n  background-color: #ebebeb;\n  display: inline-block;\n`;\n\nexport default Nirmaan;\n","import React from \"react\";\n\nexport const listPlugin = options => {\n  return {\n    commands: {\n      insertUnorderedList: editor => {\n        editor\n          .setBlocks(\"list-item\")\n          .wrapBlock(\"ul-list\")\n          .focus();\n      },\n      insertOrderedList: editor => {\n        editor\n          .setBlocks(\"list-item\")\n          .wrapBlock(\"ol-list\")\n          .focus();\n      },\n      unwrapList: editor => {\n        editor\n          .unwrapBlock(\"ul-list\")\n          .unwrapBlock(\"ol-list\")\n          .focus();\n      }\n    },\n    queries: {\n      isList: editor => {\n        return editor.value.blocks.some(node => node.type === \"list-item\");\n      },\n      isParagraph: editor => {\n        return editor.value.blocks.some(node => node.type === \"paragraph\");\n      },\n      isBlockEmpty: editor => {\n        return editor.value.endText && editor.value.endText.text === \"\";\n      }\n    },\n    renderNode: (props, editor, next) => {\n      const { attributes, node, children } = props;\n      switch (node.type) {\n        case \"ul-list\":\n          return <ul {...attributes}>{children}</ul>;\n        case \"ol-list\":\n          return <ol {...attributes}>{children}</ol>;\n        case \"list-item\":\n          return <li {...attributes}>{children}</li>;\n        default:\n          return next();\n      }\n    },\n    onKeyDown: (event, editor, next) => {\n      if (editor.isList() && editor.isBlockEmpty() && event.keyCode === 13) {\n        event.preventDefault();\n        editor\n          .setBlocks(\"paragraph\")\n          .unwrapList()\n          .focus();\n      } else {\n        return next();\n      }\n    }\n  };\n};\n","import React from \"react\";\nimport { NoteNode } from \"../nodes/NoteNode\";\n\nexport const notePlugin = options => {\n  return {\n    commands: {\n      insertNote: editor => {\n        editor.insertBlock(\"note\").unwrapList();\n      }\n    },\n    renderNode: (props, editor, next) => {\n      const { node } = props;\n      const align = node.data.get(\"align\");\n\n      const style = align\n        ? {\n            textAlign: align\n          }\n        : {};\n\n      switch (node.type) {\n        case \"note\":\n          return <NoteNode {...props} style={style} />;\n        default:\n          return next();\n      }\n    }\n  };\n};\n","import { ALIGN } from \"../consts\";\n\nexport const alignPlugin = options => {\n  return {\n    queries: {\n      getData: editor => {\n        return editor.value.document.nodes.reduce((prev, next) => {\n          return {\n            ...prev,\n            ...next.get(\"data\").toJS()\n          };\n        }, {});\n      }\n    },\n    commands: {\n      alignLeft: editor => {\n        editor.setBlocks({\n          data: {\n            ...editor.getData(),\n            align: ALIGN.LEFT\n          }\n        });\n      },\n      alignCenter: editor => {\n        editor.setBlocks({\n          data: {\n            ...editor.getData(),\n            align: ALIGN.CENTER\n          }\n        });\n      },\n      alignRight: editor => {\n        editor.setBlocks({\n          data: {\n            ...editor.getData(),\n            align: ALIGN.RIGHT\n          }\n        });\n      }\n    }\n  };\n};\n","import React from \"react\";\n\nexport const linkPlugin = options => {\n  return {\n    commands: {\n      wrapLink: (editor, href) => {\n        editor.wrapInline({\n          type: \"link\",\n          data: { href }\n        });\n        editor.moveToEnd();\n      },\n      unwrapLink: editor => {\n        editor.unwrapInline(\"link\");\n      }\n    },\n    queries: {\n      hasLinks: editor => {\n        const { value } = editor;\n        return value.inlines.some(inline => inline.type === \"link\");\n      }\n    },\n    renderNode: (props, editor, next) => {\n      const { attributes, node, children } = props;\n      switch (node.type) {\n        case \"link\":\n          const { data } = node;\n          const href = data.get(\"href\");\n          return (\n            <a {...attributes} href={href}>\n              {children}\n            </a>\n          );\n        default:\n          return next();\n      }\n    }\n  };\n};\n","import React from \"react\";\nimport { getEventTransfer } from \"slate-react\";\nimport htmlSerializer from \"../serializers/HtmlSerializer\";\n\nexport const pasteHtmlPlugin = options => {\n  return {\n    onPaste: (event, editor, next) => {\n      const transfer = getEventTransfer(event);\n      if (transfer.type !== \"html\") return next();\n      console.log(\"I am pasting yo\");\n      const { document } = htmlSerializer.deserialize(transfer.html);\n      editor.insertFragment(document);\n    }\n  };\n};\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Editor } from \"slate-react\";\nimport { Value, Block } from \"slate\";\nimport { BoldMark } from \"./marks/BoldMark\";\nimport { CodeMark } from \"./marks/CodeMark\";\nimport { codeNodePlugin } from \"./plugins/codePlugin\";\nimport { FormatToolbar } from \"./toolbars/FormatToolBar\";\nimport { ItalicMark } from \"./marks/ItalicMark\";\nimport { BlocksToolbar } from \"./toolbars/BlocksToolbar\";\nimport { ImageNode } from \"./nodes/ImageNode\";\nimport SoftBreak from \"slate-soft-break\";\nimport DeepTable from \"slate-deep-table\";\nimport { listPlugin } from \"./plugins/listPlugin\";\nimport Viewer from \"./Viewer\";\nimport styled from \"styled-components\";\nimport { alignPlugin } from \"./plugins/alignPlugin\";\nimport { notePlugin } from \"./plugins/notePlugin\";\nimport { DataToolbar } from \"./toolbars/DataToolbar\";\nimport { linkPlugin } from \"./plugins/linkPlugin\";\nimport Nirmaan from \"./Nirmaan\";\n\nconst existingValue = JSON.parse(localStorage.getItem(\"content\"));\nconst initialValue = Value.fromJSON(\n  existingValue || {\n    document: {\n      nodes: [\n        {\n          object: \"block\",\n          type: \"paragraph\",\n          nodes: [\n            {\n              object: \"text\",\n              leaves: [\n                {\n                  text: \"A line of text in a paragraph.\"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  }\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nirmaan defaultValue={initialValue} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"editor\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}